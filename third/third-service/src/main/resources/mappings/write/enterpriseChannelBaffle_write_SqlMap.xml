<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.third.dao.write.EnterpriseChannelBaffleWriteDAO">

	<insert id="insert" parameterType="com.egeo.components.third.po.EnterpriseChannelBafflePO">
		INSERT INTO enterprise_channel_baffle(
        <trim suffixOverrides=",">
			<if test="enterpriseId != null">
				enterprise_id,
			</if>
			<if test="channelCode != null">
				channel_code,
			</if>
			<if test="channelServiceName != null">
				channel_service_name,
			</if>
			<if test="channelServiceType != null">
				channel_service_type,
			</if>
			<if test="ifDecrypt != null">
				if_decrypt,
			</if>
			<if test="returnData != null">
				return_data,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
        </trim>
		) VALUES (
        <trim suffixOverrides=",">
			<if test="enterpriseId != null">
				#{enterpriseId},
			</if>
			<if test="channelCode != null">
				#{channelCode},
			</if>
			<if test="channelServiceName != null">
				#{channelServiceName},
			</if>
			<if test="channelServiceType != null">
				#{channelServiceType},
			</if>
			<if test="ifDecrypt != null">
				#{ifDecrypt},
			</if>
			<if test="returnData != null">
				#{returnData},
			</if>
			<if test="state != null">
				#{state},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
        </trim>
		)
		<selectKey keyProperty="id" resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>




	<update id="update">
	UPDATE enterprise_channel_baffle
		<set>
			<if test="enterpriseId != null">
				enterprise_id = #{enterpriseId},
			</if>
			<if test="channelCode != null">
				channel_code = #{channelCode},
			</if>
			<if test="channelServiceName != null">
				channel_service_name = #{channelServiceName},
			</if>
			<if test="channelServiceType != null">
				channel_service_type = #{channelServiceType},
			</if>
			<if test="ifDecrypt != null">
				if_decrypt = #{ifDecrypt},
			</if>
			<if test="returnData != null">
				return_data = #{returnData},
			</if>
			<if test="state != null">
				state = #{state},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
			WHERE id = #{id}
	</update>

	<delete id="delete">
		delete from enterprise_channel_baffle where id = #{id}
	</delete>

	<delete id="deleteByPara">
		delete from enterprise_channel_baffle
		<where>
			<if test="enterpriseId != null">
				and enterprise_id = #{enterpriseId}
			</if>
			<if test="channelCode != null">
				and channel_code = #{channelCode}
			</if>
			<if test="channelServiceName != null">
				and channel_service_name = #{channelServiceName}
			</if>
			<if test="channelServiceType != null">
				and channel_service_type = #{channelServiceType}
			</if>
			<if test="ifDecrypt != null">
				and if_decrypt = #{ifDecrypt}
			</if>
			<if test="returnData != null">
				and return_data = #{returnData}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
		</where>
	</delete>


</mapper>
