<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.stock.dao.write.CommodityProductUnitWarehouseStockWriteDAO">

	<update id="recoverOrderStock">
		update commodity_product_unit_warehouse_stock
		set real_stock_num=real_stock_num+#{puCount}
		where commodity_product_unit_id=#{puId}
	</update>
	
	<update id="recoverOrderStockBatch">
		update commodity_product_unit_warehouse_stock
		set real_stock_num=real_stock_num+#{puCount}
		where commodity_product_unit_id <include refid="updateBatchClause" />
	</update>
	

	<update id="unFreeseOrderStock">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num-#{puCount}
		where commodity_product_unit_id=#{puId} and real_frozen_stock_num != 0
	</update>
	
	<update id="unFreeseOrderStockBatch">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num-#{puCount}
		where commodity_product_unit_id <include refid="updateBatchClause" />
		and real_frozen_stock_num != 0
	</update>

	<update id="freezeStockWithTx">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num+#{puCount}
		where commodity_product_unit_id=#{puId}
		and real_frozen_stock_num+#{puCount} &lt;= real_stock_num
	</update>
	
	<sql id="updateBatchClause">
		in
		<foreach collection="ids" item="puId" open="(" separator=","
			close=")">
			#{puId}
		</foreach>
	</sql>
	
	<update id="freezeStockBatchWithTx">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num+#{puCount}
		where commodity_product_unit_id <include refid="updateBatchClause" />
		and real_frozen_stock_num+#{puCount} &lt;= real_stock_num
	</update>
	
	<update id="unfreezeAndDeductStockWithTx">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num-#{puCount},
		real_stock_num=real_stock_num-#{puCount}
		where commodity_product_unit_id=#{puId} and real_frozen_stock_num != 0
	</update>
	
	<update id="unfreezeAndDeductStockBatchWithTx">
		update commodity_product_unit_warehouse_stock
		set real_frozen_stock_num=real_frozen_stock_num-#{puCount},
		real_stock_num=real_stock_num-#{puCount}
		where commodity_product_unit_id <include refid="updateBatchClause" />
		and real_frozen_stock_num != 0
	</update>
	
	<sql id="inClause">
		<foreach collection="ids" item="id" separator=",">
			(
			#{id},
			#{merchantProductId},
			#{merchantId},
			#{merchantProductId},
			0,
			0,
			#{platformId}
			)
		</foreach>
	</sql>
	
	<insert id="insertCommodityProductUnitWarehouseStockAllWithTx">
		INSERT INTO commodity_product_unit_warehouse_stock(
				commodity_product_unit_id,
				standard_unit_id,
				merchant_id,
				merchant_product_id,
				real_stock_num,
				real_frozen_stock_num,
				platform_id
		) VALUES <include refid="inClause" />
	</insert>




	<insert id="saveCommodityProductUnitWarehouseStock" parameterType="com.egeo.components.stock.po.CommodityProductUnitWarehouseStockPO" >
		insert into commodity_product_unit_warehouse_stock (
		commodity_product_unit_id,
		standard_unit_id,
		merchant_id,
		merchant_product_id,
		real_stock_num,
		real_frozen_stock_num,
		platform_id
		)values
		<foreach collection="poList" item="po" separator="," >
			(#{po.commodityProductUnitId},
			#{po.standardUnitId},
			#{po.merchantId},
			#{po.merchantProductId},
			#{po.realStockNum},
			#{po.realFrozenStockNum},
			#{po.platformId}
			)
		</foreach>
	</insert>














	<insert id="insert" parameterType="com.egeo.components.stock.po.CommodityProductUnitWarehouseStockPO">
		INSERT INTO commodity_product_unit_warehouse_stock(
        <trim suffixOverrides=",">
			<if test="commodityProductUnitId != null">
				commodity_product_unit_id,
			</if>
			<if test="standardUnitId != null">
				standard_unit_id,
			</if>
			<if test="merchantId != null">
				merchant_id,
			</if>
			<if test="warehouseId != null">
				warehouse_id,
			</if>
			<if test="merchantProductId != null">
				merchant_product_id,
			</if>
			<if test="realStockNum != null">
				real_stock_num,
			</if>
			<if test="realFrozenStockNum != null">
				real_frozen_stock_num,
			</if>
			<if test="pmWarehousePriority != null">
				pm_warehouse_priority,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="platformId != null">
				platform_id,
			</if>
        </trim>		
		) VALUES (
        <trim suffixOverrides=",">
			<if test="commodityProductUnitId != null">
				#{commodityProductUnitId},
			</if>
			<if test="standardUnitId != null">
				#{standardUnitId},
			</if>
			<if test="merchantId != null">
				#{merchantId},
			</if>
			<if test="warehouseId != null">
				#{warehouseId},
			</if>
			<if test="merchantProductId != null">
				#{merchantProductId},
			</if>
			<if test="realStockNum != null">
				#{realStockNum},
			</if>
			<if test="realFrozenStockNum != null">
				#{realFrozenStockNum},
			</if>
			<if test="pmWarehousePriority != null">
				#{pmWarehousePriority},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="platformId != null">
				#{platformId},
			</if>
        </trim>		
		)
		<selectKey keyProperty="id" resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>


	
	
	<update id="update">
	UPDATE commodity_product_unit_warehouse_stock 
		<set>
			<if test="commodityProductUnitId != null">
				commodity_product_unit_id = #{commodityProductUnitId},
			</if>			
			<if test="standardUnitId != null">
				standard_unit_id = #{standardUnitId},
			</if>			
			<if test="merchantId != null">
				merchant_id = #{merchantId},
			</if>			
			<if test="warehouseId != null">
				warehouse_id = #{warehouseId},
			</if>			
			<if test="merchantProductId != null">
				merchant_product_id = #{merchantProductId},
			</if>			
			<if test="realStockNum != null">
				real_stock_num = #{realStockNum},
			</if>			
			<if test="realFrozenStockNum != null">
				real_frozen_stock_num = #{realFrozenStockNum},
			</if>			
			<if test="pmWarehousePriority != null">
				pm_warehouse_priority = #{pmWarehousePriority},
			</if>			
			<if test="createTime != null">
				create_time = #{createTime},
			</if>			
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>			
			<if test="platformId != null">
				platform_id = #{platformId},
			</if>			
		</set>
			WHERE id = #{id}
	</update>	
	

	<delete id="delete">
		delete from commodity_product_unit_warehouse_stock where id = #{id}
	</delete>

	<delete id="deleteByPara">
		delete from commodity_product_unit_warehouse_stock 
		<where>
			<if test="commodityProductUnitId != null">
				and commodity_product_unit_id = #{commodityProductUnitId}
			</if>
			<if test="standardUnitId != null">
				and standard_unit_id = #{standardUnitId}
			</if>
			<if test="merchantId != null">
				and merchant_id = #{merchantId}
			</if>
			<if test="warehouseId != null">
				and warehouse_id = #{warehouseId}
			</if>
			<if test="merchantProductId != null">
				and merchant_product_id = #{merchantProductId}
			</if>
			<if test="realStockNum != null">
				and real_stock_num = #{realStockNum}
			</if>
			<if test="realFrozenStockNum != null">
				and real_frozen_stock_num = #{realFrozenStockNum}
			</if>
			<if test="pmWarehousePriority != null">
				and pm_warehouse_priority = #{pmWarehousePriority}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
			<if test="platformId != null">
				and platform_id = #{platformId}
			</if>
		</where>
	</delete>
	
	<update id="merchandiseStock">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_stock_num +#{po.realStockNum}
		WHERE commodity_product_unit_id = #{po.commodityProductUnitId}
	</update>	
	
	<update id="merchandiseStockBatch">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_stock_num +#{realStockNum}
		WHERE commodity_product_unit_id  
		<include refid="updateBatchClause" />
	</update>	
	
	<update id="deliverStockWithTx">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_stock_num - #{po.realStockNum}
		WHERE commodity_product_unit_id = #{po.commodityProductUnitId} and real_stock_num - #{po.realStockNum} > real_frozen_stock_num
	</update>	
	
	<update id="deliverResidueStockWithTx">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_frozen_stock_num
		WHERE commodity_product_unit_id = #{po.commodityProductUnitId}
	</update>
	
	<update id="deliverStockBatchWithTx">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_stock_num - #{realStockNum}
		WHERE commodity_product_unit_id 
		<include refid="updateBatchClause" />
		and real_stock_num - #{realStockNum} > real_frozen_stock_num
	</update>	
	
	<update id="deliverResidueStockBatchWithTx">
		UPDATE commodity_product_unit_warehouse_stock SET real_stock_num = real_frozen_stock_num
		WHERE commodity_product_unit_id 
		<include refid="updateBatchClause" />
	</update>	
	
	<update id="setCommodityProductUnitWarehouseStockWithTx">
		UPDATE commodity_product_unit_warehouse_stock 
		SET real_stock_num = #{realStockNum},
		real_frozen_stock_num = #{realFrozenStockNum}
		WHERE commodity_product_unit_id 
		<include refid="updateBatchClause" />
	</update>




	<update id="updateJdPUStock">
		update commodity_product_unit_warehouse_stock
		set real_stock_num=9999
		where merchant_id=6
	</update>
</mapper>
	