<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.promotion.dao.read.ActivityMerchantProdReadDAO">
	<resultMap type="com.egeo.components.promotion.po.ActivityMerchantProdPO" id="activityMerchantProdMap">
		<result property="id" column="id" />
		<result property="activityId" column="activity_id" />
		<result property="sortValue" column="sort_value" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="merchantProdId" column="merchant_prod_id" />
	</resultMap>
	
	<resultMap type="com.egeo.components.promotion.condition.ActivityMerchantProdCondition" id="activityMerchantProdCondition" extends="activityMerchantProdMap">
		<result property="activityName" column="name" />
		<result property="startTime" column="start_time" />
		<result property="finishTime" column="finish_time" />
	</resultMap>

	<sql id="activityMerchantProdColumns">
		id,
		activity_id,
		sort_value,
		create_time,
		update_time,
		platform_id,
		merchant_prod_id
	</sql>

	<select id="findById" parameterType="com.egeo.components.promotion.po.ActivityMerchantProdPO" resultMap="activityMerchantProdMap">
		SELECT
		<include refid="activityMerchantProdColumns" />
		FROM activity_merchant_prod
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="activityMerchantProdMap">
		SELECT
		<include refid="activityMerchantProdColumns" />
		FROM activity_merchant_prod
		<where>
			<if test="po.activityId != null">
				and activity_id = #{po.activityId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.merchantProdId != null">
				and merchant_prod_id = #{po.merchantProdId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM activity_merchant_prod
		<where>
			<if test="po.activityId != null">
				and activity_id = #{po.activityId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.merchantProdId != null">
				and merchant_prod_id = #{po.merchantProdId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="activityMerchantProdMap">
		SELECT
		<include refid="activityMerchantProdColumns" />
		FROM activity_merchant_prod
		<where>
			<if test="po.activityId != null">
				and activity_id = #{po.activityId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.merchantProdId != null">
				and merchant_prod_id = #{po.merchantProdId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
	</select>
	
	<select id="activityMerchantProdByPages" resultMap="activityMerchantProdCondition">
		SELECT a.id,a.`name`,a.sort_value,a.start_time,a.finish_time,amp.merchant_prod_id from (SELECT * from activity WHERE finish_time > #{date} limit #{pages},1) a
		LEFT JOIN activity_merchant_prod amp on a.id = amp.activity_id
		WHERE a.platform_id = #{platformId}
	</select>
</mapper>
	