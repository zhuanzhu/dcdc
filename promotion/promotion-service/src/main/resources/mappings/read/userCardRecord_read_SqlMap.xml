<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.promotion.dao.read.UserCardRecordReadDAO">

	<resultMap type="com.egeo.components.promotion.po.UserCardRecordPO" id="resultPoMap">
		<result property="id" column="id" />
		<result property="cardNo" column="card_no" />
		<result property="userId" column="user_id" />
		<result property="cardName" column="card_name" />
		<result property="cardType" column="card_type" />
		<result property="settleMethod" column="settle_method" />
		<result property="cardAmount" column="card_amount" />
		<result property="cardCash" column="card_cash" />
		<result property="expireDateStart" column="expire_date_start" />
		<result property="expireDateEnd" column="expire_date_end" />
		<result property="cardState" column="card_state" />
		<result property="useState" column="use_state" />
		<result property="companyId" column="company_id" />
		<result property="sourceCardId" column="source_card_id" />
		<result property="operator" column="operator" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="columnsSql">
		id,
		card_no,
		user_id,
		card_name,
		card_type,
		settle_method,
		card_amount,
		card_cash,
		expire_date_start,
		expire_date_end,
		card_state,
		use_state,
		company_id,
		source_card_id,
		operator,
		create_time,
		update_time
	</sql>


	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.cardNo != null">
				and card_no = #{po.cardNo}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.cardName != null">
				and card_name = #{po.cardName}
			</if>
			<if test="po.cardNameLike != null">
				AND card_name LIKE CONCAT('%',#{po.cardNameLike},'%')
			</if>
			<if test="po.cardNoLike != null">
				AND card_no LIKE CONCAT('%',#{po.cardNoLike},'%')
			</if>
			<if test="po.cardType != null">
				and card_type = #{po.cardType}
			</if>
			<if test="po.settleMethod != null">
				and settle_method = #{po.settleMethod}
			</if>
			<if test="po.expireDateStart != null">
				and expire_date_start <![CDATA[>=]]> #{po.expireDateStart}
			</if>
			<if test="po.expireDateEnd != null">
				and expire_date_end <![CDATA[<=]]> #{po.expireDateEnd}
			</if>
			<if test="po.cardState != null">
				and card_state = #{po.cardState}
			</if>
			<if test="po.useState != null">
				and use_state = #{po.useState}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.sourceCardId != null">
				and source_card_id = #{po.sourceCardId}
			</if>
			<if test="po.operator != null">
				and operator = #{po.operator}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.userIds != null">
				and user_id
				<include refid="userIdsInClause"/>
			</if>
			<if test="po.useStates != null">
				and use_state in
				<foreach collection="po.useStates" item="useStateIndex" open="(" separator=","
						 close=")">
					#{useStateIndex}
				</foreach>
			</if>
			<if test="po.ids != null">
				and id in
				<foreach collection="po.ids" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>

		</where>
	</sql>

	<sql id="tableNameId">
		user_card_record
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="userIdsInClause">
		in
		<foreach collection="po.userIds" item="uId" open="(" separator=","
				 close=")">
			#{uId}
		</foreach>
	</sql>

	<select id="findById" parameterType="com.egeo.components.promotion.po.UserCardRecordPO" resultMap="resultPoMap">
		SELECT
		<include refid="columnsSql" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="resultPoMap">
		SELECT
			<include refid="columnsSql" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="resultPoMap">
		SELECT
		<include refid="columnsSql" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="sumUserCardTypeAmount" resultMap="resultPoMap">
		SELECT
		card_type AS card_type,
		sum( card_cash )AS card_cash
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		GROUP BY card_type
	</select>


</mapper>
