<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.write.UserPlatformWriteDAO">
	<insert id="insert" parameterType="com.egeo.components.user.po.UserPlatformPO">
		INSERT INTO u_user_platform(
        <trim suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="platformId != null">
				platform_id,
			</if>
			<if test="isAvailable != null">
				is_available,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
        </trim>		
		) VALUES (
        <trim suffixOverrides=",">
			<if test="userId != null">
				#{userId},
			</if>
			<if test="platformId != null">
				#{platformId},
			</if>
			<if test="isAvailable != null">
				#{isAvailable},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
        </trim>		
		)
		<selectKey keyProperty="id" resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>


	
	
	<update id="update">
	UPDATE u_user_platform 
		<set>
			<if test="userId != null">
				user_id = #{userId},
			</if>			
			<if test="platformId != null">
				platform_id = #{platformId},
			</if>			
			<if test="isAvailable != null">
				is_available = #{isAvailable},
			</if>			
			<if test="createTime != null">
				create_time = #{createTime},
			</if>			
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>			
		</set>
			WHERE id = #{id}
	</update>

	<update id="updateAvailableByUserId">
		UPDATE u_user_platform
		set is_available = #{isAvailable}
		where user_id = #{userId} and platform_id = #{platformId}
	</update>

	<delete id="delete">
		delete from u_user_platform where id = #{id}
	</delete>

	<delete id="deleteByPara">
		delete from u_user_platform 
		<where>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="platformId != null">
				and platform_id = #{platformId}
			</if>
			<if test="isAvailable != null">
				and is_available = #{isAvailable}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
		</where>
	</delete>

<delete id="deleteByUserIdAndPid">
		delete from u_user_platform where user_id = #{userId} and platform_id = #{platformId}
	</delete>
	<delete id="delUserPlatform">
		delete from u_user_platform  
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.platformIds != null">
				and platform_id in(${po.platformIds})
			</if>
		</where>
	</delete>
	
	<delete id="delByRoleIds">
		delete from u_user_platform where platform_id not in(SELECT distinct(platform_id) FROM u_platform_role WHERE role_id in
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
		) and user_id = #{userId}
	</delete>
</mapper>
	