<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.FunctionTreeNodeUrlReadDAO">
	<resultMap type="com.egeo.components.user.po.FunctionTreeNodeUrlPO" id="functionTreeNodeUrlMap">
		<result property="id" column="id" />
		<result property="urlId" column="url_id" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="functionTreeNodeId" column="function_tree_node_id" />
		<result property="updateUserId" column="update_user_id" />
		<result property="updateUserName" column="update_user_name" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<resultMap type="com.egeo.components.user.condition.FunctionTreeNodeUrlCondition" id="functionTreeNodeUrlConditionMap" extends="functionTreeNodeUrlMap">
		<result property="urlId" column="url_id" />
		<result property="urlName" column="url_name" />
		<result property="url" column="url" />
		<result property="functionName" column="function_name" />
	</resultMap>

	<sql id="functionTreeNodeUrlColumns">
		id,
		url_id,
		platform_id,
		create_time,
		function_tree_node_id,
		update_user_id,
		update_user_name,
		update_time
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.FunctionTreeNodeUrlPO" resultMap="functionTreeNodeUrlMap">
		SELECT
		<include refid="functionTreeNodeUrlColumns" />
		FROM u_function_tree_node_url
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="functionTreeNodeUrlMap">
		SELECT
		<include refid="functionTreeNodeUrlColumns" />
		FROM u_function_tree_node_url
		<where>
			<if test="po.urlId != null">
				and url_id = #{po.urlId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.functionTreeNodeId != null">
				and function_tree_node_id = #{po.functionTreeNodeId}
			</if>
			<if test="po.updateUserId != null">
				and update_user_id = #{po.updateUserId}
			</if>
			<if test="po.updateUserName != null">
				and update_user_name = #{po.updateUserName}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_function_tree_node_url
		<where>
			<if test="po.urlId != null">
				and url_id = #{po.urlId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.functionTreeNodeId != null">
				and function_tree_node_id = #{po.functionTreeNodeId}
			</if>
			<if test="po.updateUserId != null">
				and update_user_id = #{po.updateUserId}
			</if>
			<if test="po.updateUserName != null">
				and update_user_name = #{po.updateUserName}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</select>

	<select id="findFunctionTreeNodeUrlConditionOfPage" resultMap="functionTreeNodeUrlConditionMap">
		SELECT 
		fu.id,
		fu.url_id,
		fu.platform_id,
		fu.create_time,
		fu.function_tree_node_id,
		fu.update_user_id,
		fu.update_user_name,
		fu.update_time,
		u.name AS url_name,
		u.url,
		fn.name AS function_name
		FROM u_function_tree_node_url fu 
		LEFT JOIN u_function_tree_node fn ON fu.function_tree_node_id = fn.id
		LEFT JOIN u_url u ON fu.url_id = u.id
		<where>
			<if test="true">
				and fu.platform_id = #{condition.platformId}
			</if>
			<if test="condition.urlName != null">
				and u.name like concat('%',#{condition.urlName},'%')
			</if>
			<if test="condition.functionName != null">
				and fn.name like concat('%',#{condition.functionName},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY fu.id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countFunctionTreeNodeUrlConditionOfPage" resultType="java.lang.Integer">
		SELECT 
		count(1) cnt
		FROM u_function_tree_node_url fu 
		LEFT JOIN u_function_tree_node fn ON fu.function_tree_node_id = fn.id
		LEFT JOIN u_url u ON fu.url_id = u.id
		<where>
			<if test="true">
				and fu.platform_id = #{condition.platformId}
			</if>
			<if test="condition.urlName != null">
				and u.name like concat('%',#{condition.urlName},'%')
			</if>
			<if test="condition.functionName != null">
				and fn.name like concat('%',#{condition.functionName},'%')
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="functionTreeNodeUrlMap">
		SELECT
		<include refid="functionTreeNodeUrlColumns" />
		FROM u_function_tree_node_url
		<where>
			<if test="po.urlId != null">
				and url_id = #{po.urlId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.functionTreeNodeId != null">
				and function_tree_node_id = #{po.functionTreeNodeId}
			</if>
			<if test="po.updateUserId != null">
				and update_user_id = #{po.updateUserId}
			</if>
			<if test="po.updateUserName != null">
				and update_user_name = #{po.updateUserName}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>

	<select id="findFunctionTreeNodeUrlByFunctionTreeNodeId" resultMap="functionTreeNodeUrlConditionMap">
		SELECT
		url.id as url_id,
		url.name as url_name,
		url.url as url
		FROM u_function_tree_node_url ftnu,u_url url
		WHERE ftnu.url_id = url.id AND function_tree_node_id=#{functionTreeNodeId}
	</select>
</mapper>
	