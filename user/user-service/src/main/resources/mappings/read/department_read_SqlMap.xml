<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.DepartmentReadDAO">
	<select id="queryDepartmentByCompanyId" resultMap="departmentMap">
		select * from u_department
		where company_id=#{companyId}
	</select>

	<select id="queryDepsByPid" resultMap="departmentMap">
		select * from u_department
		where p_id=#{id}
	</select>

	<select id="queryDepartmentByUserId" resultMap="departmentMap">
		select * from u_department
		where id=
		(select department_id from u_user_welfare
		where user_id=#{userId})
	</select>
	
	<select id="queryLeafDepByCompanyId" resultMap="departmentMap">
		select * from u_department
		where company_id=#{companyId}
		and is_subset=0
	</select>
	
	<select id="querySuperDepListByCompanyId" resultMap="departmentMap">
		select * from u_department
		where company_id=#{companyId}
		and p_id=0
	</select>

	<resultMap type="com.egeo.components.user.po.DepartmentPO" id="departmentMap">
		<result property="id" column="id" />
		<result property="pId" column="p_id" />
		<result property="path" column="path" />
		<result property="level" column="level" />
		<result property="departmentName" column="department_name" />
		<result property="departmentContent" column="department_content" />
		<result property="sortValue" column="sort_value" />
		<result property="isSubset" column="is_subset" />
		<result property="companyId" column="company_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
	</resultMap>

	<sql id="departmentColumns">
		id,
		p_id,
		path,
		level,
		department_name,
		department_content,
		sort_value,
		is_subset,
		company_id,
		create_time,
		update_time,
		platform_id
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.DepartmentPO" resultMap="departmentMap">
		SELECT
		<include refid="departmentColumns" />
		FROM u_department
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="departmentMap">
		SELECT
		<include refid="departmentColumns" />
		FROM u_department
		<where>
			<if test="po.pId != null">
				and p_id = #{po.pId}
			</if>
			<if test="po.path != null">
				and path = #{po.path}
			</if>
			<if test="po.level != null">
				and level = #{po.level}
			</if>
			<if test="po.departmentName != null">
				and department_name = #{po.departmentName}
			</if>
			<if test="po.departmentContent != null">
				and department_content = #{po.departmentContent}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.isSubset != null">
				and is_subset = #{po.isSubset}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_department
		<where>
			<if test="po.pId != null">
				and p_id = #{po.pId}
			</if>
			<if test="po.path != null">
				and path = #{po.path}
			</if>
			<if test="po.level != null">
				and level = #{po.level}
			</if>
			<if test="po.departmentName != null">
				and department_name = #{po.departmentName}
			</if>
			<if test="po.departmentContent != null">
				and department_content = #{po.departmentContent}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.isSubset != null">
				and is_subset = #{po.isSubset}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="departmentMap">
		SELECT
		<include refid="departmentColumns" />
		FROM u_department
		<where>
			<if test="po.pId != null">
				and p_id = #{po.pId}
			</if>
			<if test="po.path != null">
				and path = #{po.path}
			</if>
			<if test="po.level != null">
				and level = #{po.level}
			</if>
			<if test="po.departmentName != null">
				and department_name = #{po.departmentName}
			</if>
			<if test="po.departmentContent != null">
				and department_content = #{po.departmentContent}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.isSubset != null">
				and is_subset = #{po.isSubset}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
	</select>
</mapper>
	