<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.UserWelfareReadDAO">

	<select id="queryUserWelfareByUserId" resultMap="userWelfareMap">
		select * from u_user_welfare
		where user_id=#{userId}
	</select>

	<select id="queryPraiseCountRankByUserId" resultMap="praiseCountRank">
		select user_id,praise_count,rank from
		(select user_id,praise_count,@rownum:=@rownum+1 rank
		from
		(select user_id,
		<choose>
			<when test="type==0">
				praise_month_count
			</when>
			<when test="type==1">
				praise_day_count
			</when>
		</choose>
		praise_count,@rownum:=0
		from u_user_welfare
		where user_id in
		(select id
		from u_user where company_id=#{companyId})
		and
		<choose>
			<when test="type==0">
				praise_month_count
			</when>
			<when test="type==1">
				praise_day_count
			</when>
		</choose>
		&gt; 0
		order by praise_count desc,last_praise_time desc
		) a) b
		where user_id=#{userId}
	</select>

	<select id="queryPraiseCountRankTotalCount" resultType="java.lang.Integer">
		select count(0) from u_user_welfare
		where user_id in
		(select u.id
		from u_user u
		left join u_user_extend ue
		on u.id=ue.id
		left join u_user_welfare uw
		on u.id=uw.user_id 
		where 
		u.company_id=#{companyId}
		and uw.department_id is not null
		and ue.name is not null
		and ue.name != ''
		)
		and
		<choose>
			<when test="type==0">
				praise_month_count
			</when>
			<when test="type==1">
				praise_day_count
			</when>
		</choose>
		&gt; 0
	</select>

	<select id="queryPraiseCountRankPage" resultMap="praiseCountRank">
		select user_id,praise_count,@rownum:=@rownum+1 rank
		from
		(select user_id,
		<choose>
			<when test="type==0">
				praise_month_count
			</when>
			<when test="type==1">
				praise_day_count
			</when>
		</choose>
		praise_count,@rownum:=0
		from u_user_welfare
		where user_id in
		(select u.id
		from u_user u
		left join u_user_extend ue
		on u.id=ue.id
		left join u_user_welfare uw
		on u.id=uw.user_id 
		where 
		u.company_id=#{companyId}
		and uw.department_id is not null
		and ue.name is not null
		and ue.name != ''
		)
		and
		<choose>
			<when test="type==0">
				praise_month_count
			</when>
			<when test="type==1">
				praise_day_count
			</when>
		</choose>
		&gt; 0
		order by praise_count desc,last_praise_time
		) a
		limit
		#{page.limitStart},#{page.pageSize}
	</select>

	<resultMap type="com.egeo.components.user.po.UserPraiseCountRankPO"
		id="praiseCountRank">
		<result column="user_id" property="userId" />
		<result column="praise_count" property="praiseCount" />
		<result column="rank" property="rank" />
	</resultMap>

	<select id="queryUserWelfaresByUserIds" resultMap="userWelfareMap">
		select * from u_user_welfare
		where user_id in
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</select>

	<resultMap type="com.egeo.components.user.po.UserWelfarePO" id="userWelfareMap">
		<result column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="department_id" property="departmentId" />
		<result column="entry_time" property="entryTime" />
		<result column="praise_day_count" property="praiseDayCount" />
		<result column="praise_month_count" property="praiseMonthCount" />
		<result column="last_praise_time" property="lastPraiseTime" />
	</resultMap>

	<sql id="userWelfareColumns">
		id,
		user_id,
		department_id,
		entry_time,
		praise_day_count,
		praise_month_count,
		last_praise_time
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.UserWelfarePO"
		resultMap="userWelfareMap">
		SELECT
		<include refid="userWelfareColumns" />
		FROM u_user_welfare
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="userWelfareMap">
		SELECT
		<include refid="userWelfareColumns" />
		FROM u_user_welfare
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.departmentId != null">
				and department_id = #{po.departmentId}
			</if>
			<if test="po.entryTime != null">
				and entry_time = #{po.entryTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_user_welfare
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.departmentId != null">
				and department_id = #{po.departmentId}
			</if>
			<if test="po.entryTime != null">
				and entry_time = #{po.entryTime}
			</if>
		</where>
	</select>

	<select id="findAll" resultMap="userWelfareMap">
		SELECT
		<include refid="userWelfareColumns" />
		FROM u_user_welfare
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.departmentId != null">
				and department_id = #{po.departmentId}
			</if>
			<if test="po.entryTime != null">
				and entry_time = #{po.entryTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findDepartmentIsNullSumByUserIds" resultType="java.lang.Integer">
		select count(1) cnt from u_user_welfare
		where user_id in
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</select>
</mapper>
	