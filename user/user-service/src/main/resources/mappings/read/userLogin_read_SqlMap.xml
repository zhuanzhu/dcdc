<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.UserLoginReadDAO">
	<resultMap type="com.egeo.components.user.po.UserLoginPO" id="userLoginMap">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="username" column="username" />
		<result property="loginResult" column="login_result" />
		<result property="loginTime" column="login_time" />
		<result property="ip" column="ip" />
		<result property="browser" column="browser" />
		<result property="companyId" column="company_id" />
		<result property="platformId" column="platform_id" />
		<result property="loginType" column="login_type" />
		<result property="storeId" column="store_id" />
		<result property="clientType" column="client_type" />
		<result property="keyMessage" column="key_message" />
	</resultMap>

	<sql id="userLoginColumns">
		id,
		user_id,
		username,
		login_result,
		login_time,
		ip,
		browser,
		company_id,
		platform_id,
		login_type,
		store_id,
		client_type,
		key_message
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.UserLoginPO" resultMap="userLoginMap">
		SELECT
		<include refid="userLoginColumns" />
		FROM u_user_login
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="userLoginMap">
		SELECT
		<include refid="userLoginColumns" />
		FROM u_user_login
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.username != null">
				and username = #{po.username}
			</if>
			<if test="po.loginResult != null">
				and login_result = #{po.loginResult}
			</if>
			<if test="po.loginTime != null">
				and login_time = #{po.loginTime}
			</if>
			<if test="po.ip != null">
				and ip = #{po.ip}
			</if>
			<if test="po.browser != null">
				and browser like CONCAT('%',#{browser},'%')
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.loginType != null">
				and login_type = #{po.loginType}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.keyMessage != null">
				and key_message = #{po.keyMessage}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_user_login
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.username != null">
				and username = #{po.username}
			</if>
			<if test="po.loginResult != null">
				and login_result = #{po.loginResult}
			</if>
			<if test="po.loginTime != null">
				and login_time = #{po.loginTime}
			</if>
			<if test="po.ip != null">
				and ip = #{po.ip}
			</if>
			<if test="po.browser != null">
				and browser = #{po.browser}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.loginType != null">
				and login_type = #{po.loginType}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.keyMessage != null">
				and key_message = #{po.keyMessage}
			</if>
		</where>
	</select>
	
	<select id="findConditionOfPage" resultMap="userLoginMap">
		SELECT
		<include refid="userLoginColumns" />
		FROM u_user_login
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.username != null">
				and username = #{po.username}
			</if>
			<if test="po.loginResult != null">
				and login_result = #{po.loginResult}
			</if>
			<if test="po.loginTime != null">
				and login_time = #{po.loginTime}
			</if>
			<if test="po.ip != null">
				and ip = #{po.ip}
			</if>
			<if test="po.browser != null">
				and browser like CONCAT('%',#{po.browser},'%')
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.loginType != null">
				and login_type = #{po.loginType}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.keyMessage != null">
				and key_message = #{po.keyMessage}
			</if>
			<if test="po.startTime != null">
				and login_time &gt; #{po.startTime}
			</if>
			<if test="po.endTime != null">
				and login_time &lt; #{po.endTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countConditionOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_user_login
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.username != null">
				and username = #{po.username}
			</if>
			<if test="po.loginResult != null">
				and login_result = #{po.loginResult}
			</if>
			<if test="po.loginTime != null">
				and login_time = #{po.loginTime}
			</if>
			<if test="po.ip != null">
				and ip = #{po.ip}
			</if>
			<if test="po.browser != null">
				and browser like CONCAT('%',#{po.browser},'%')
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.loginType != null">
				and login_type = #{po.loginType}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.keyMessage != null">
				and key_message = #{po.keyMessage}
			</if>
			<if test="po.startTime != null">
				and login_time &gt; #{po.startTime}
			</if>
			<if test="po.endTime != null">
				and login_time &lt; #{po.endTime}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="userLoginMap">
		SELECT
		<include refid="userLoginColumns" />
		FROM u_user_login
		<where>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.username != null">
				and username = #{po.username}
			</if>
			<if test="po.loginResult != null">
				and login_result = #{po.loginResult}
			</if>
			<if test="po.loginTime != null">
				and login_time = #{po.loginTime}
			</if>
			<if test="po.ip != null">
				and ip = #{po.ip}
			</if>
			<if test="po.browser != null">
				and browser = #{po.browser}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="findByUserIds" resultMap="userLoginMap">
		SELECT
		<include refid="userLoginColumns" />
		FROM u_user_login
		<where>
			<if test="userIds != null">
				and user_id in 
				<foreach collection="userIds" item="userId" open="(" close=")" separator=",">
					#{userId}
				</foreach>
			</if>
			<if test="startTime != null">
				and login_time &gt; #{startTime}
			</if>
			<if test="endTime != null">
				and login_time &lt; #{endTime}
			</if>
		</where>
		order by user_id , login_time desc 
	</select>
</mapper>
	