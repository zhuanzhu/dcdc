<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.UserInformationReadDAO">
	<resultMap type="com.egeo.components.user.po.UserInformationPO" id="userInformationMap">
		<result property="id" column="id" />
		<result property="headline" column="headline" />
		<result property="headlineContent" column="headline_content" />
		<result property="userId" column="user_id" />
		<result property="companyId" column="company_id" />
		<result property="type" column="type" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
	</resultMap>
	
	<resultMap type="com.egeo.components.user.condition.UserInformationCondition" id="userInformationCondition" extends="userInformationMap">
		<result property="isDeleted" column="is_deleted" />
	</resultMap>

	<sql id="userInformationColumns">
		id,
		headline,
		headline_content,
		user_id,
		company_id,
		type,
		create_time,
		update_time,
		platform_id
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.UserInformationPO" resultMap="userInformationMap">
		SELECT
		<include refid="userInformationColumns" />
		FROM u_user_information
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="userInformationMap">
		SELECT
		<include refid="userInformationColumns" />
		FROM u_user_information
		<where>
			<if test="po.headline != null">
				and headline = #{po.headline}
			</if>
			<if test="po.headlineContent != null">
				and headline_content = #{po.headlineContent}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM u_user_information
		<where>
			<if test="po.headline != null">
				and headline = #{po.headline}
			</if>
			<if test="po.headlineContent != null">
				and headline_content = #{po.headlineContent}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="userInformationMap">
		SELECT
		<include refid="userInformationColumns" />
		FROM u_user_information
		<where>
			<if test="po.headline != null">
				and headline = #{po.headline}
			</if>
			<if test="po.headlineContent != null">
				and headline_content = #{po.headlineContent}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="findUserInformationOfByUserIdPage" resultMap="userInformationCondition">
		select a.*,b.is_deleted from u_user_information a 
		left join u_user_information_read b on a.id=b.user_information_id
		WHERE (a.type = 1 or (a.type = 2 and a.company_id = #{po.companyId}) or (a.type = 3 and a.user_id = #{po.userId})) and (b.is_deleted !=1 or  b.is_deleted is null)
		order by a.create_time
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countUserInformationOfByUserIdPage" resultType="java.lang.Integer">
		select count(1) cnt from u_user_information a 
		left join u_user_information_read b on a.id=b.user_information_id
		WHERE (a.type = 1 or (a.type = 2 and a.company_id = #{po.companyId}) or (a.type = 3 and a.user_id = #{po.userId})) and (b.is_deleted !=1 or  b.is_deleted is null);
	</select>
	
	<select id="findUnreadByUserId" resultType="java.lang.Integer">
		select count(1) cnt from u_user_information a 
		left join u_user_information_read b on a.id=b.user_information_id
		WHERE (a.type = 1 or (a.type = 2 and a.company_id = #{po.companyId}) or (a.type = 3 and a.user_id = #{po.userId})) and b.is_deleted is null;
	</select>
</mapper>
	