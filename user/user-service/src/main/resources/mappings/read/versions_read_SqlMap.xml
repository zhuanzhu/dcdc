<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.user.dao.read.VersionsReadDAO">

	<select id="queryLaterVersionsByVersionCode" resultMap="versionsMap">
		select * from versions
		where type=#{type}
		and version_code>#{vCode}
		and version_status = 1  
		order by version_code desc
	</select>

	<select id="queryVerisonByVersionCode" resultMap="versionsMap">
		select * from
		versions
		<where>
			version_code=#{vCode}
			<if test="user!=null">
				and user = #{user}
			</if>
			and platform_id=#{platformId}
			and version_status = 1
			and type=#{type}
		</where>

	</select>

	<select id="queryLatestVersion" resultMap="versionsMap">
		select * from versions
		where type=#{type} 
		and user = #{user} 
		and version_status = 1 
		order by version_code desc
		limit 0,1
	</select>
	
	<select id="queryLatestOfficialVersion" resultMap="versionsMap">
		select * from versions
		where type=#{po.type} 
		and user = #{po.user} 
		and is_official = 1 
		<if test="po.versionStatus != null">
			and version_status = 1 
		</if>
		order by version_code desc
		limit 0,1
	</select>
	
	<resultMap type="com.egeo.components.user.po.VersionsPO" id="versionsMap">
		<result property="id" column="id" />
		<result property="versionsMark" column="versions_mark" />
		<result property="type" column="type" />
		<result property="releaseDate" column="release_date" />
		<result property="isConstraint" column="is_constraint" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="url" column="url" />
		<result property="description" column="description" />
		<result property="versionCode" column="version_code" />
		<result property="installName" column="install_name" />
		<result property="resume" column="resume" />
		<result property="isOfficial" column="is_official" />
		<result property="versionStatus" column="version_status" />
		<result property="platformId" column="platform_id" />
		<result property="user" column="user" />
	</resultMap>

	<sql id="versionsColumns">
		id,
		versions_mark,
		type,
		release_date,
		is_constraint,
		create_time,
		update_time,
		url,
		description,
		version_code,
		install_name,
		resume,
		is_official,
		version_status,
		platform_id,
		user
	</sql>

	<select id="findById" parameterType="com.egeo.components.user.po.VersionsPO"
		resultMap="versionsMap">
		SELECT
		<include refid="versionsColumns" />
		FROM versions
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="versionsMap">
		SELECT
		<include refid="versionsColumns" />
		FROM versions
		<where>
			<if test="po.id != null">
				and id = #{po.id}
			</if>
			<if test="po.versionsMark != null">
				and versions_mark = #{po.versionsMark} 
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="findOfPageByBlurry" resultMap="versionsMap">
		SELECT
		<include refid="versionsColumns" />
		FROM versions
		<where>
			<if test="po.id != null">
				and id = #{po.id}
			</if>
			<if test="po.versionsMark != null">
				and versions_mark like concat('%',#{po.versionsMark},'%') 
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="getVersionsOfPage" resultMap="versionsMap">
		SELECT
		<include refid="versionsColumns" />
		FROM versions
		<where>
			<if test="po.id != null">
				and id = #{po.id}
			</if>
			<if test="po.versionsMark != null">
				and versions_mark like concat('%',#{po.versionsMark},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM versions
		<where>
			<if test="po.id != null">
				and id = #{po.id}
			</if>
			<if test="po.versionsMark != null">
				and versions_mark = #{po.versionsMark} 
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
		</where>
	</select>
	
	<select id="countOfPageByBlurry" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM versions
		<where>
			<if test="po.id != null">
				and id = #{po.id}
			</if>
			<if test="po.versionsMark != null">
				and versions_mark like concat('%',#{po.versionsMark},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>

	<select id="findAll" resultMap="versionsMap">
		SELECT
		<include refid="versionsColumns" />
		FROM versions
		<where>
			<if test="po.versionsMark != null">
				and versions_mark = #{po.versionsMark}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.releaseDate != null">
				and release_date = #{po.releaseDate}
			</if>
			<if test="po.isConstraint != null">
				and is_constraint = #{po.isConstraint}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.url != null">
				and url = #{po.url}
			</if>
			<if test="po.versionCode != null">
				and version_code = #{po.versionCode}
			</if>
			<if test="po.installName != null">
				and install_name = #{po.installName}
			</if>
			<if test="po.resume != null">
				and resume = #{po.resume}
			</if>
			<if test="po.isOfficial != null">
				and is_official = #{po.isOfficial}
			</if>
			<if test="po.versionStatus != null">
				and version_status = #{po.versionStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>
	
	<select id="queryMaxVersionCode" resultType="java.lang.Integer">
		SELECT MAX(version_code) FROM versions 
		<where>
			<if  test="type != null">
				and type = #{type}
			</if>
			<if  test="platformId != null">
				and platform_id = #{platformId}
			</if>
			<if  test="user != null">
				and user= #{user}
			</if>
		</where>
	</select>
	
</mapper>
	