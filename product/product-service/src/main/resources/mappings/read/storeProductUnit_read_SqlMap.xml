<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StoreProductUnitReadDAO">
	<resultMap type="com.egeo.components.product.po.StoreProductUnitPO" id="storeProductUnitMap">
		<result property="id" column="id" />
		<result property="storeId" column="store_id" />
		<result property="standardUnitId" column="standard_unit_id" />
		<result property="commodityProductUnitId" column="commodity_product_unit_id" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="storeName" column="store_name" />
		<result property="commodityProductUnitName" column="commodity_product_unit_name" />
		<result property="productUnitSerialNumber" column="product_unit_serial_number" />
		<result property="salePrice" column="sale_price" />
		<result property="puPicUrl" column="pu_pic_url" />
		<result property="saleWay" column="sale_way" />
	</resultMap>

	<sql id="storeProductUnitColumns">
		id,
		store_id,
		standard_unit_id,
		commodity_product_unit_id,
		status,
		create_time,
		update_time,
		platform_id
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.StoreProductUnitPO" resultMap="storeProductUnitMap">
		SELECT
		spu.id,
		spu.store_id,
		spu.standard_unit_id,
		spu.commodity_product_unit_id,
		spu.status,
		spu.create_time,
		spu.update_time,
		spu.platform_id,
		cpu.name commodity_product_unit_name,
		cpu.product_unit_serial_number
		FROM store_product_unit spu,commodity_product_unit cpu
		WHERE spu.commodity_product_unit_id = cpu.id and spu.id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="storeProductUnitMap">
		SELECT 
		a.id,
		cpu.id commodity_product_unit_id,
		cpu.`name` commodity_product_unit_name,
		cpu.product_unit_serial_number,
		cpu.sale_price,
		cpu.pu_pic_url,
		a.store_name,
		su.sale_way,
		a.store_id
		from commodity_product_unit cpu, standard_unit su,
		(SELECT 
		spu.id,
		cpu.id commodity_product_unit_id,
		cpu.standard_unit_id,
		s.`name` store_name,
		spu.store_id
		from store_product_unit spu, commodity_product_unit cpu,store s,standard_unit_store sus
		<where>
			spu.commodity_product_unit_id = cpu.id and sus.store_id = s.id and sus.standard_unit_id = spu.standard_unit_id and sus.store_id = spu.store_id and cpu.is_vendible = 1
			<if test="po.commodityProductUnitName != null">
				and cpu.`name` like concat('%',#{po.commodityProductUnitName},'%')
			</if>
			<if test="po.productUnitSerialNumber != null">
				and cpu.product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.storeName != null">
				and s.`name` like concat('%',#{po.storeName},'%')
			</if>
			<if test="po.storeId != null">
				and sus.store_id = #{po.storeId}
			</if>
			<if test="po.standardUnitId != null">
				and spu.standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.commodityProductUnitId != null">
				and spu.commodity_product_unit_id = #{po.commodityProductUnitId}
			</if>
			<if test="po.status != null">
				and spu.status = #{po.status}
			</if>
			<if test="po.platformId != null">
				and spu.platform_id = #{po.platformId}
			</if>
		</where>
		group by spu.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY spu.id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>) a
		where 
		a.commodity_product_unit_id = cpu.id 
		and a.standard_unit_id = su.id
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT 
		count(distinct spu.id) cnt
		from store_product_unit spu, commodity_product_unit cpu,store s,standard_unit_store sus
		<where>
			spu.commodity_product_unit_id = cpu.id and sus.store_id = s.id and sus.standard_unit_id = spu.standard_unit_id and sus.store_id = spu.store_id and cpu.is_vendible = 1
			<if test="po.commodityProductUnitName != null">
				and cpu.`name` like concat('%',#{po.commodityProductUnitName},'%')
			</if>
			<if test="po.productUnitSerialNumber != null">
				and cpu.product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.storeName != null">
				and s.`name` like concat('%',#{po.storeName},'%')
			</if>
			<if test="po.storeId != null">
				and sus.store_id = #{po.storeId}
			</if>
			<if test="po.standardUnitId != null">
				and spu.standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.commodityProductUnitId != null">
				and spu.commodity_product_unit_id = #{po.commodityProductUnitId}
			</if>
			<if test="po.status != null">
				and spu.status = #{po.status}
			</if>
			<if test="po.platformId != null">
				and spu.platform_id = #{po.platformId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="storeProductUnitMap">
		SELECT
		<include refid="storeProductUnitColumns" />
		FROM store_product_unit
		<where>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.commodityProductUnitId != null">
				and commodity_product_unit_id = #{po.commodityProductUnitId}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="findStorePuIdsByStoreId" resultType="java.lang.Long">
		SELECT spu.id from standard_unit_store sus,store_product_unit spu,commodity_product_unit cpu
		WHERE sus.standard_unit_id = spu.standard_unit_id 
		and spu.commodity_product_unit_id = cpu.id 
		and cpu.is_vendible = 1 
		and sus.store_id = spu.store_id 
		and sus.store_id = #{storeId} 
		and spu.platform_id = #{platformId}
	</select>
</mapper>
	