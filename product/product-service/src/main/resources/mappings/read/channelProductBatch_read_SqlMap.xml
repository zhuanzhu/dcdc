<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.ChannelProductBatchReadDAO">

	<resultMap type="com.egeo.components.product.po.ChannelProductBatchPO" id="channelProductBatchMap">
		<result property="id" column="id" />
		<result property="channelCode" column="channel_code" />
		<result property="productId" column="product_id" />
		<result property="linkSkuId" column="link_sku_id" />
		<result property="num" column="num" />
		<result property="batchNo" column="batch_no" />
		<result property="batchId" column="batch_id" />
		<result property="status" column="status" />
		<result property="specList" column="spec_list" />
		<result property="specNum" column="spec_num" />
		<result property="specName" column="spec_name" />
		<result property="expiredDate" column="expired_date" />
		<result property="makeDate" column="make_date" />
		<result property="price" column="price" />
		<result property="priceControl" column="price_control" />
		<result property="priceVip" column="price_vip" />
		<result property="priceSettleMent" column="price_settle_ment" />
		<result property="priceMarket" column="price_market" />
		<result property="isMinStockSpecificationItem" column="is_min_stock_specification_item" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="channelProductBatchColumns">
		id,
		channel_code,
		product_id,
		link_sku_id,
		num,
		batch_no,
		batch_id,
		status,
		spec_list,
		spec_num,
		spec_name,
		expired_date,
		make_date,
		price,
		price_control,
		price_vip,
		price_settle_ment,
		price_market,
		is_min_stock_specification_item,
		create_time,
		update_time,
		platform_id
	</sql>


	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.channelCode != null">
				and channel_code = #{po.channelCode}
			</if>
			<if test="po.productId != null">
				and product_id = #{po.productId}
			</if>
			<if test="po.linkSkuId != null">
				and link_sku_id = #{po.linkSkuId}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="tableNameId">
		channel_product_batch
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.ChannelProductBatchPO" resultMap="channelProductBatchMap">
		SELECT
		<include refid="channelProductBatchColumns" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="channelProductBatchMap">
		SELECT
			<include refid="channelProductBatchColumns" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="channelProductBatchMap">
		SELECT
		<include refid="channelProductBatchColumns" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>


	<select id="findChannelProductBatchOfPage" resultType="com.egeo.components.product.vo.ChannelSupplierProductResponseVO">
		select
		       b.channel_code as channelCode,
				p.goods_type as productType,
				p.brand_name as brandName,
				p.category_f_pid as channelCategoryId,
				CONCAT(p.`title`,'X',b.spec_name) as productName,
				p.product_id as productId,
				b.id as skuId,
				b.price as price,
				b.price_market as marketPrice,
				b.price_settle_ment as  salePrice,
				if(sku.`state`=1,1,0) as `status`,
				if(sku.`state`=1,1,0) as `state`,
				case when b.channel_code='worldBuy' then 5 else 0 end as source
		from channel_product_batch b
		LEFT JOIN channel_product p on b.product_id = p.product_id
		LEFT JOIN channel_product_sku sku on b.link_sku_id = sku.external_sku_id and b.product_id = sku.product_id
		<include refid="channelProductBatchWhereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY b.price
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countChannelProductBatchOfPage" resultType="java.lang.Integer">
		select
			count(1) cnt
		from channel_product_batch b
		LEFT JOIN channel_product p on b.product_id = p.product_id
		LEFT JOIN channel_product_sku sku on b.link_sku_id = sku.external_sku_id and b.product_id = sku.product_id
		<include refid="channelProductBatchWhereSql"/>
	</select>


	<sql id="channelProductBatchWhereSql">
		<where>
			<if test="po.channelCode != null">
				and b.channel_code = #{po.channelCode}
			</if>
			<if test="po.keyword != null">
				and p.`title` like CONCAT('%',#{po.keyword},'%')
			</if>
			<if test="po.catId1 != null">
				and p.category_f_pid = #{po.catId1}
			</if>
			<if test="po.catId2 != null">
				and p.category_pid = #{po.catId2}
			</if>
			<if test="po.catId3 != null">
				and p.category_id = #{po.catId3}
			</if>
		</where>
	</sql>
</mapper>
