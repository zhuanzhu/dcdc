<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StandardUnitCombinationReadDAO">
	<resultMap type="com.egeo.components.product.po.StandardUnitCombinationPO" id="standardUnitCombinationMap">
		<result property="id" column="id" />
		<result property="combinationName" column="combination_name" />
		<result property="type" column="type" />
		<result property="content" column="content" />
		<result property="createUserid" column="create_userid" />
		<result property="createUsername" column="create_username" />
		<result property="createTime" column="create_time" />
		<result property="updateUserid" column="update_userid" />
		<result property="updateUsername" column="update_username" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="sortType" column="sort_type" />
		<result property="categoryTreeId" column="category_tree_id" />
		<result property="combinationMinProfit" column="combination_min_profit" />

	</resultMap>

	<sql id="standardUnitCombinationColumns">
		id,
		combination_name,
		type,
		content,
		create_userid,
		create_username,
		create_time,
		update_userid,
		update_username,
		update_time,
		platform_id,
		sort_type,
		category_tree_id,
		combination_min_profit
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.StandardUnitCombinationPO" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		<where>
			<if test="po.combinationName != null">
				and combination_name like concat('%',#{po.combinationName},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit_combination
		<where>
			<if test="po.combinationName != null">
				and combination_name like concat('%',#{po.combinationName},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>

	<select id="findAll" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		<where>
			<if test="po.combinationName != null">
				and combination_name = #{po.combinationName}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findAllByBlurry" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		<where>
			<if test="po.combinationName != null">
				and combination_name like concat('%',#{po.combinationName},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findStandardUnitSizeByTag" resultType="java.lang.Integer">
		SELECT
		count(distinct su.id) cnt
		FROM standard_unit su,standard_unit_combination_tag suct,standard_product_unit spu,standard_unit_tag sut
		<where>
			<if test="true">
				and suct.tag_id = sut.tag_id and sut.standard_unit_id = su.id and su.standard_product_unit_id = spu.id and su.is_vendible = 0 and su.is_visible = 0
			</if>
			<if test="standardUnitCombinationId != null">
				and suct.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
		</where>
	</select>

	<select id="findStandardUnitCombinationOfPage" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		<where>
			<if test="ids != null">
				and id <include refid="inClause" />
			</if>
			<if test="po.combinationName != null">
				and combination_name like concat('%',#{po.combinationName},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countStandardUnitCombinationOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit_combination
		<where>
			<if test="ids != null">
				and id <include refid="inClause" />
			</if>
			<if test="po.combinationName != null">
				and combination_name like concat('%',#{po.combinationName},'%')
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.content != null">
				and content = #{po.content}
			</if>
			<if test="po.createUserid != null">
				and create_userid = #{po.createUserid}
			</if>
			<if test="po.createUsername != null">
				and create_username = #{po.createUsername}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateUserid != null">
				and update_userid = #{po.updateUserid}
			</if>
			<if test="po.updateUsername != null">
				and update_username = #{po.updateUsername}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.types != null and po.types.size() >0">
				and type in
				<foreach collection="po.types" item="type" index="index" open="(" separator=","
						 close=")">
					#{type}
				</foreach>
			</if>
		</where>
	</select>


	<select id="findStandardUnitCombinationAllLimit" resultMap="standardUnitCombinationMap">
		SELECT
		<include refid="standardUnitCombinationColumns" />
		FROM standard_unit_combination
		<where>
			<if test="suCombinationName != null">
				and combination_name LIKE CONCAT ('%',#{suCombinationName},'%')
			</if>
		</where>
		limit 0,20
	</select>
</mapper>
