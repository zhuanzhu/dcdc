<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.CommodityProductUnitReadDAO">

	<select id="queryPuByName" resultMap="commodityProductUnitMap">
		select * from commodity_product_unit
		where name like concat('%',#{puName},'%')
	</select>

	<resultMap type="com.egeo.components.product.po.CommodityProductUnitPO" id="commodityProductUnitMap">
		<result property="id" column="id" />
		<result property="productUnitSerialNumber" column="product_unit_serial_number" />
		<result property="productUnitId" column="product_unit_id" />
		<result property="skuId" column="sku_id" />
		<result property="standardUnitId" column="standard_unit_id" />
		<result property="name" column="name" />
		<result property="remark" column="remark" />
		<result property="salePrice" column="sale_price" />
		<result property="status" column="status" />
		<result property="isVendible" column="is_vendible" />
		<result property="code" column="code" />
		<result property="puPicUrl" column="pu_pic_url" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="demoSalePrice" column="demo_sale_price" />
		<result property="competingSalePrice" column="competing_sale_price" />
		<result property="limitBuyNum" column="limit_buy_num" />
		<result property="jdSpuId" column="jd_spu_id" />
	</resultMap>
	
	<resultMap type="com.egeo.components.product.condition.CommodityProductUnitCondition" id="commodityProductUnitCondition" extends="commodityProductUnitMap">
		<result property="standardProductUnitId" column="standard_product_unit_id" />
		<result property="standardUnitId" column="standard_unit_id" />
		<result property="enterpriseId" column="enterprise_id" />
		<result property="merchantId" column="merchant_id" />
		<result property="commodityTemplateId" column="commodity_template_id" />
		<result property="storeId" column="store_id" />
		<result property="storeName" column="store_name" />
		<result property="standardUnitName" column="standard_unit_name" />
		<result property="isVisible" column="is_visible" />
		<result property="externalSkuId" column="external_sku_id" />
		<result property="skuName" column="sku_name" />
		<result property="puId" column="pu_id" />
		<result property="puSalePrice" column="pu_sale_price" />
		<result property="maxSalePrice" column="max_sale_price" />
		<result property="minSalePrice" column="min_sale_price" />
		<result property="productCategory" column="product_category"/>
		<result property="merchantProductSerialNumber" column="merchant_product_serial_number"/>
	</resultMap>
	
	<resultMap type="com.egeo.components.product.po.ProductUnitStandardPO" id="productUnitStandardMap" >
		<result property="name" column="name" />
		<result property="value" column="value" />
	</resultMap>
	

	<sql id="commodityProductUnitColumns">
		id,
		product_unit_serial_number,
		product_unit_id,
		sku_id,
		standard_unit_id,
		name,
		remark,
		sale_price,
		status,
		is_vendible,
		code,
		pu_pic_url,
		create_time,
		update_time,
		platform_id,
		demo_sale_price,
		competing_sale_price,
		limit_buy_num,
		jd_spu_id
	</sql>
	
	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</sql>
	<select id="findLastId" resultType="java.lang.Long">
		SELECT
		MAX(id)
		FROM commodity_product_unit
	</select>


	<select id="findPuIdByExtendSkuId" resultType="java.lang.Long">
		SELECT
		pu.id
		FROM commodity_product_unit pu LEFT JOIN sku sk ON pu.sku_id=sk.id
		 WHERE sk.external_sku_id=#{skuId}
	</select>

	<select id="findById" parameterType="com.egeo.components.product.po.CommodityProductUnitPO" resultMap="commodityProductUnitMap">
		SELECT
		<include refid="commodityProductUnitColumns" />
		FROM commodity_product_unit
		WHERE id = #{po.id}
	</select>
	<select id="findPuListBySuId" resultMap="commodityProductUnitMap">
		SELECT
		<include refid="commodityProductUnitColumns" />
		FROM commodity_product_unit
		WHERE standard_unit_id = #{suId}
	</select>
	<select id="findSkuIdByPuId" resultType="java.lang.Long">
		SELECT
		sku_id
		FROM commodity_product_unit
		WHERE  id=#{puId}
	</select>

	<select id="findOfPage" resultMap="commodityProductUnitMap">
		SELECT
		<include refid="commodityProductUnitColumns" />
		FROM commodity_product_unit
		<where>
			<if test="po.productUnitSerialNumber != null">
				and product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.productUnitId != null">
				and product_unit_id = #{po.productUnitId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.puPicUrl != null">
				and pu_pic_url = #{po.puPicUrl}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and competing_sale_price=#{po.competingSalePrice}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM commodity_product_unit
		<where>
			<if test="po.productUnitSerialNumber != null">
				and product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.productUnitId != null">
				and product_unit_id = #{po.productUnitId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.puPicUrl != null">
				and pu_pic_url = #{po.puPicUrl}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and competing_sale_price=#{po.competingSalePrice}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="commodityProductUnitMap">
		SELECT
		<include refid="commodityProductUnitColumns" />
		FROM commodity_product_unit
		<where>
			<if test="po.productUnitSerialNumber != null">
				and product_unit_serial_number = #{po.productUnitSerialNumber}
			</if>
			<if test="po.productUnitId != null">
				and product_unit_id = #{po.productUnitId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.puPicUrl != null">
				and pu_pic_url = #{po.puPicUrl}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and competing_sale_price=#{po.competingSalePrice}
			</if>
			<if test="po.jdSpuId != null">
				and jd_spu_id=#{po.jdSpuId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="countRecord" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM commodity_product_unit
		WHERE sku_id = #{skuId}
	</select>
	
	<select id="findByPUIds" resultMap="commodityProductUnitCondition">
		SELECT
		<include refid="commodityProductUnitColumns" />,
		(SELECT commodity_template_id from standard_product_unit WHERE id = (SELECT standard_product_unit_id from standard_unit WHERE id = standard_unit_id)) commodity_template_id
		FROM commodity_product_unit
		where id 
		<include refid="inClause" />
	</select>
	
	<select id="attValueIdByProductUnitId" resultType="java.lang.Long">
		SELECT sav.att_value_id FROM sku_att_name san
		LEFT JOIN sku_att_value sav on sav.sku_att_name_id = san.id
		LEFT JOIN commodity_product_unit cpu on cpu.sku_id = san.sku_id
		WHERE cpu.id = #{productUnitId}
	</select>
	
	<select id="findSUSPUByPUId" resultMap="commodityProductUnitCondition">
		SELECT
		cpu.id,
		cpu.product_unit_serial_number,
		cpu.product_unit_id,
		cpu.sku_id,
		cpu.standard_unit_id,
		cpu.name,
		cpu.remark,
		cpu.sale_price,
		cpu.status,
		cpu.is_vendible,
		cpu.code,
		cpu.limit_buy_num,
		cpu.pu_pic_url,
		cpu.demo_sale_price,
		cpu.competing_sale_price,
		su.standard_product_unit_id,
		su.merchant_id,
		su.product_category,
		su.merchant_product_serial_number
		FROM commodity_product_unit cpu 
		LEFT JOIN standard_unit su on su.id = cpu.standard_unit_id
		WHERE cpu.id = #{puId}
	</select>
	
	<select id="puIdsBySkuId" resultType="java.lang.Long">
		SELECT id FROM commodity_product_unit WHERE sku_id = #{skuId}
	</select>
	
	<select id="findByStandardUnitId" resultType="java.lang.Long">
		SELECT id FROM commodity_product_unit WHERE standard_unit_id = #{standardUnitId}
	</select>
	
	<select id="queryCommodityTemplateIdByPuId" resultType="java.lang.Long">
		SELECT
		spu.commodity_template_id
		FROM commodity_product_unit cpu 
		LEFT JOIN sku s ON s.id= cpu.sku_id 
		LEFT JOIN standard_product_unit spu ON spu.id=s.standard_product_unit_id 
		WHERE cpu.id = #{puId}
	</select>
	
	<select id="findIdsByPUIds" resultType="java.lang.Long">
		SELECT id
		FROM commodity_product_unit 
		WHERE product_unit_id <include refid="inClause" />
	</select>
	
	<select id="findPictureByStorePUId" resultMap="commodityProductUnitMap">
		SELECT
		cpu.id,
		cpu.sku_id,
		cpu.standard_unit_id,
		cpu.pu_pic_url
		FROM commodity_product_unit cpu,store_product_unit spu
		WHERE 
		spu.commodity_product_unit_id = cpu.id 
		and spu.id = #{storeProductUnitId}
	</select>
	
	<select id="findCommodityProductUnitOfPage" resultMap="commodityProductUnitCondition">
		SELECT
		cpu.id,
		cpu.product_unit_serial_number,
		cpu.sku_id,
		cpu.standard_unit_id,
		cpu.name,
		cpu.sale_price,
		cpu.status,
		cpu.is_vendible,
		cpu.pu_pic_url,
		cpu.demo_sale_price,
		cpu.limit_buy_num,
		cpu.competing_sale_price,
		su.name standard_unit_name,
		su.merchant_id,
		su.store_id,
		su.is_visible,
		su.enterprise_id,
		s.`name` store_name
		FROM commodity_product_unit cpu,standard_unit su,store s
		<where>
			cpu.standard_unit_id = su.id and su.store_id = s.id
			<if test="po.productUnitSerialNumber != null">
				and cpu.product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.skuId != null">
				and cpu.sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and cpu.standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and cpu.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.status != null">
				and cpu.status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and cpu.is_vendible = #{po.isVendible}
			</if>
			<if test="po.storeId != null">
				and su.store_id = #{po.storeId}
			</if>
			<if test="po.platformId != null">
				and cpu.platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and cpu.demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and cpu.competing_sale_price=#{po.competingSalePrice}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY cpu.id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countCommodityProductUnitOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM commodity_product_unit cpu,standard_unit su,store s
		<where>
			cpu.standard_unit_id = su.id and su.store_id = s.id
			<if test="po.productUnitSerialNumber != null">
				and cpu.product_unit_serial_number like concat('%',#{po.productUnitSerialNumber},'%')
			</if>
			<if test="po.skuId != null">
				and cpu.sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and cpu.standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and cpu.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.status != null">
				and cpu.status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and cpu.is_vendible = #{po.isVendible}
			</if>
			<if test="po.storeId != null">
				and su.store_id = #{po.storeId}
			</if>
			<if test="po.platformId != null">
				and cpu.platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and cpu.demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and cpu.competing_sale_price=#{po.competingSalePrice}
			</if>
		</where>
	</select>
	
	<select id="findMerchantPUOfPage" resultMap="commodityProductUnitCondition">
		select 
		pu.id,
		pu.name,
		pu.sale_price,
		pu.pu_pic_url,
		pu.status,
		pu.is_vendible,
		pu.sku_id,
		sku.external_sku_id,
		sku.sku_name 
		from commodity_product_unit pu
		LEFT JOIN sku on pu.sku_id = sku.id
		LEFT JOIN standard_unit su on pu.standard_unit_id = su.id
		<where>
			su.merchant_id = #{po.merchantId} 
			<if test="po.name != null">
				and pu.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.status != null">
				and pu.status = #{po.status}
			</if>
			<if test="po.id != null">
				and pu.id = #{po.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY pu.id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countMerchantPUOfPage" resultType="java.lang.Integer">
		select 
		count(1) cnt
		from commodity_product_unit pu
		LEFT JOIN sku on pu.sku_id = sku.id
		LEFT JOIN standard_unit su on pu.standard_unit_id = su.id
		<where>
			su.merchant_id = #{merchantId} 
			<if test="po.name != null">
				and pu.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.status != null">
				and pu.status = #{po.status}
			</if>
			<if test="po.id != null">
				and pu.id = #{po.id}
			</if>
		</where>
	</select>
	
	<select id="findPuInfoBySuIdList" resultMap="commodityProductUnitCondition">
		SELECT 
		a.standard_unit_id,
		b.pu_id,
		b.pu_sale_price,
		a.max_sale_price,
		a.min_sale_price 
		FROM (
			SELECT 
			standard_unit_id,
			<if test="companyType == 0">
				MAX(sale_price) max_sale_price,MIN(sale_price) min_sale_price
			</if>
			<if test="companyType == 1">
				MAX(demo_sale_price) max_sale_price,MIN(demo_sale_price) min_sale_price
			</if>
			<if test="companyType == 2">
				MAX(competing_sale_price) max_sale_price,MIN(competing_sale_price) min_sale_price
			</if>
			FROM commodity_product_unit 
			GROUP BY standard_unit_id
		) a
		LEFT JOIN (
			SELECT 
			standard_unit_id,
			MIN(id) pu_id,
			<if test="companyType == 0">
				sale_price pu_sale_price
			</if>
			<if test="companyType == 1">
				demo_sale_price pu_sale_price
			</if>
			<if test="companyType == 2">
				competing_sale_price pu_sale_price
			</if>
			FROM commodity_product_unit 
			GROUP BY standard_unit_id
		) b
		ON a.standard_unit_id = b.standard_unit_id 
		WHERE a.standard_unit_id in
		<foreach collection="suIds" item="suId" open="(" separator="," close=")">
			#{suId}
		</foreach>
	</select>
	
	<select id="findByPUIdSkuId" resultMap="commodityProductUnitCondition">
		SELECT
		<include refid="commodityProductUnitColumns" />,
		(SELECT commodity_template_id from standard_product_unit WHERE id = (SELECT standard_product_unit_id from standard_unit WHERE id = standard_unit_id)) commodity_template_id
		FROM commodity_product_unit
		where id 
		<include refid="inClause" />
		and sku_id = #{skuId}
	</select>
	
	<select id="findCommodityProductUnitLimit" resultMap="commodityProductUnitMap">
		SELECT
		cpu.id,
		cpu.product_unit_serial_number,
		cpu.sku_id,
		cpu.standard_unit_id,
		cpu.name,
		cpu.sale_price,
		cpu.status
		FROM commodity_product_unit cpu
		left join standard_unit su on cpu.standard_unit_id = su.id
		<where>
			<if test="po.productUnitSerialNumber != null">
				and cpu.product_unit_serial_number = #{po.productUnitSerialNumber}
			</if>
			<if test="po.productUnitId != null">
				and cpu.product_unit_id = #{po.productUnitId}
			</if>
			<if test="po.skuId != null">
				and cpu.sku_id = #{po.skuId}
			</if>
			<if test="po.standardUnitId != null">
				and cpu.standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.name != null">
				and cpu.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.remark != null">
				and cpu.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and cpu.sale_price = #{po.salePrice}
			</if>
			<if test="po.status != null">
				and cpu.status = #{po.status}
			</if>
			<if test="po.isVendible != null">
				and cpu.is_vendible = #{po.isVendible}
			</if>
			<if test="po.code != null">
				and cpu.code = #{po.code}
			</if>
			<if test="po.puPicUrl != null">
				and cpu.pu_pic_url = #{po.puPicUrl}
			</if>
			<if test="po.platformId != null">
				and cpu.platform_id = #{po.platformId}
			</if>
			<if test="po.demoSalePrice != null">
				and cpu.demo_sale_price=#{po.demoSalePrice}
			</if>
			<if test="po.competingSalePrice != null">
				and cpu.competing_sale_price=#{po.competingSalePrice}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY su.front_serial_number	
			</otherwise>
		</choose>
		limit 0,50
	</select>
</mapper>
	