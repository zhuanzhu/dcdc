<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StandardUnitCardBaseSuReadDAO">

	<resultMap type="com.egeo.components.product.po.StandardUnitCardBaseSuPO" id="standardUnitCardBaseSuMap">
		<result property="id" column="id" />
		<result property="cardBaseId" column="card_base_id" />
		<result property="standardUnitId" column="standard_unit_id" />
		<result property="sortValue" column="sort_value" />
		<result property="source" column="source" />
		<result property="snapshot" column="snapshot" />
		<result property="thirdSkuId" column="third_sku_Id" />
		<result property="sellState" column="sell_state" />
		<result property="checkTime" column="check_time" />
		<result property="sortPrice" column="sort_price" />
		<result property="sortSalesNum" column="sort_sales_num" />
		<result property="thirdSkuName" column="third_sku_name" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="standardUnitCardBaseSuColumns">
		id,
		card_base_id,
		standard_unit_id,
		sort_value,
		`source`,
		snapshot,
		third_sku_Id,
		sell_state,
		check_time,
		sort_price,
		sort_sales_num,
		third_sku_name,
		create_time,
		update_time
	</sql>


	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.cardBaseId != null">
				and card_base_id = #{po.cardBaseId}
			</if>
			<if test="po.thirdSkuId != null">
				and third_sku_Id = #{po.pthirdSkuId}
			</if>
			<if test="po.source != null">
				and `source` = #{po.source}
			</if>
			<if test="po.sellState != null">
				and `sell_state` = #{po.sellState}
			</if>
			<if test="po.standardUnitId != null">
				and `standard_unit_id` = #{po.standardUnitId}
			</if>
			<if test="po.thirdSkuName != null and po.thirdSkuName !=''">
				and third_sku_name like concat('%',#{po.thirdSkuName},'%')
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="tableNameId">
		standard_unit_card_base_su
	</sql>

<!--		<select id="findByIds" resultMap="channelServiceConfigMap">-->
<!--			select * from channel_service_config-->
<!--			where id -->
<!--			<include refid="inClause" />-->
<!--		</select>-->

	<select id="findById" parameterType="com.egeo.components.product.po.StandardUnitCardBaseSuPO" resultMap="standardUnitCardBaseSuMap">
		SELECT
		<include refid="standardUnitCardBaseSuColumns" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="standardUnitCardBaseSuMap">
		SELECT
			<include refid="standardUnitCardBaseSuColumns" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="standardUnitCardBaseSuMap">
		SELECT
		<include refid="standardUnitCardBaseSuColumns" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findStandardUnitCardBaseSuNumberMax" resultType="java.lang.Integer">
		SELECT
			IFNULL(max(sort_value),0) max
		FROM
		<include refid="tableNameId" />
		WHERE card_base_id = #{cardBaseId}
	</select>

	<select id="findStandardUnitSize" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
		<include refid="tableNameId" />
		WHERE card_base_id = #{cardBaseId}
	</select>

	<select id="syncChannelSellState" resultMap="standardUnitCardBaseSuMap">
		SELECT
		<include refid="standardUnitCardBaseSuColumns" />
		FROM
		<include refid="tableNameId" />
		<where>
			<if test="source != null">
				and source = #{source}
			</if>
			<if test="endCheckTime !=null ">
				and (#{endCheckTime}>=check_time or check_time is null)
			</if>
		</where>
		ORDER BY check_time,id
		limit #{size}
	</select>
</mapper>
