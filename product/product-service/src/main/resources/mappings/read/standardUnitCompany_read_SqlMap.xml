<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StandardUnitCompanyReadDAO">

	<select id="querySuCompanyAvailableCount" resultType="java.lang.Integer">
		select count(0)
		from standard_unit_company a
		LEFT JOIN standard_unit_client b on a.standard_unit_id = b.standard_unit_id
		where a.standard_unit_id=#{suId}
		and (a.company_id=#{companyId} or (a.company_id=-1 and a.company_type=#{companyType})) 
		and b.client_id = #{clientId}
	</select>

	<resultMap type="com.egeo.components.product.po.StandardUnitCompanyPO" id="standardUnitCompanyMap">
		<result property="id" column="id" />
		<result property="standardUnitId" column="standard_unit_id" />
		<result property="companyId" column="company_id" />
		<result property="createTime" column="create_time" />
		<result property="companyType" column="company_type" />
	</resultMap>

	<sql id="standardUnitCompanyColumns">
		id,
		standard_unit_id,
		company_id,
		create_time,
		company_type
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.StandardUnitCompanyPO" resultMap="standardUnitCompanyMap">
		SELECT
		<include refid="standardUnitCompanyColumns" />
		FROM standard_unit_company
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="standardUnitCompanyMap">
		SELECT
		<include refid="standardUnitCompanyColumns" />
		FROM standard_unit_company
		<where>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit_company
		<where>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="standardUnitCompanyMap">
		SELECT
		<include refid="standardUnitCompanyColumns" />
		FROM standard_unit_company
		<where>
			<if test="po.standardUnitId != null">
				and standard_unit_id = #{po.standardUnitId}
			</if>
			<if test="po.standardUnitIds != null and po.standardUnitIds.size>0">
				and standard_unit_id in
				<foreach  collection="po.standardUnitIds"  item="id"  open="("  separator=","   close=")">
					#{id}
				</foreach>
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.companyType != null">
				and company_type = #{po.companyType}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="findSuCompanyByCompanyIdAndTypeAndSuIds" resultMap="standardUnitCompanyMap">
		SELECT
		<include refid="standardUnitCompanyColumns" />
		FROM standard_unit_company
		where 
			(
			company_id = #{po.companyId}
			or (company_id = -1 and company_type = #{po.companyType})
			)
			and standard_unit_id in
			<foreach collection="suIds" item="suId" open="(" close=")" separator=",">
				#{suId}
			</foreach>
	</select>
</mapper>
	