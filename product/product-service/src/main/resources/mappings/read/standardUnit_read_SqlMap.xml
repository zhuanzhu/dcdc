<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StandardUnitReadDAO">
	<resultMap type="com.egeo.components.product.po.StandardUnitPO"
			   id="standardUnitMap">
		<result property="id" column="id" />
		<result property="merchantProductSerialNumber" column="merchant_product_serial_number" />
		<result property="merchantId" column="merchant_id" />
		<result property="standardProductUnitId" column="standard_product_unit_id" />
		<result property="merchantCateTreeNodeId" column="merchant_cate_tree_node_id" />
		<result property="productCategory" column="product_category" />
		<result property="merchantSeriesId" column="merchant_series_id" />
		<result property="name" column="name" />
		<result property="alias" column="alias" />
		<result property="isVisible" column="is_visible" />
		<result property="subtitle" column="subtitle" />
		<result property="supplierId" column="supplier_id" />
		<result property="type" column="type" />
		<result property="remark" column="remark" />
		<result property="salePrice" column="sale_price" />
		<result property="saleTaxRate" column="sale_tax_rate" />
		<result property="returnDays" column="return_days" />
		<result property="replacementDays" column="replacement_days" />
		<result property="guaranteeDays" column="guarantee_days" />
		<result property="isVatInvoice" column="is_vat_invoice" />
		<result property="isVipCard" column="is_vip_card" />
		<result property="isEnableShelflife" column="is_enable_shelfLife" />
		<result property="shelflifeDays" column="shelfLife_days" />
		<result property="isVendible" column="is_vendible" />
		<result property="grossWeight" column="gross_weight" />
		<result property="netWeight" column="net_weight" />
		<result property="code" column="code" />
		<result property="merchantBrandId" column="merchant_brand_id" />
		<result property="marketPrice" column="market_price" />
		<result property="promotionPrice" column="promotion_price" />
		<result property="status" column="status" />
		<result property="saleWay" column="sale_way" />
		<result property="soldBase" column="sold_base" />
		<result property="freightExplain" column="freight_explain" />
		<result property="shipmentsExplain" column="shipments_explain" />
		<result property="freightTemplateId" column="freight_template_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="enterpriseId" column="enterprise_id" />
		<result property="stockWarning" column="stock_warning" />
		<result property="createUserid" column="create_userid" />
		<result property="createUsername" column="create_username" />
		<result property="createUserip" column="create_userip" />
		<result property="createUsermac" column="create_usermac" />
		<result property="updateUserid" column="update_userid" />
		<result property="updateUsername" column="update_username" />
		<result property="updateUserip" column="update_userip" />
		<result property="updateUsermac" column="update_usermac" />
		<result property="isSpuKeyword" column="is_spu_keyword" />
		<result property="demoSalePrice" column="demo_sale_price" />
		<result property="competingSalePrice" column="competing_sale_price" />
		<result property="storeId" column="store_id" />
		<result property="presellPeriod" column="presell_period" />
		<result property="relevanceSuId" column="relevance_su_id" />
		<result property="buyType" column="buy_type" />
		<result property="frontSerialNumber" column="front_serial_number" />
		<result property="jdProfit" column="jd_profit" />
	</resultMap>

	<resultMap type="com.egeo.components.product.condition.StandardUnitCondition"
			   id="standardUnitCondition" extends="standardUnitMap">
		<result property="merchantName" column="merchant_name" />
		<result property="pictureUrl" column="picture_url" />
		<result property="content" column="content" />
		<result property="salesVolume" column="sales_volume" />
		<result property="commodityTemplateId" column="commodity_template_id" />
		<result property="contentUrl" column="content_url" />
		<result property="relevanceSuName" column="relevance_su_name" />
	</resultMap>

	<sql id="standardUnitColumns">
		id,
		merchant_product_serial_number,
		merchant_id,
		standard_product_unit_id,
		merchant_cate_tree_node_id,
		product_category,
		merchant_series_id,
		name,
		alias,
		is_visible,
		subtitle,
		supplier_id,
		type,
		remark,
		sale_price,
		sale_tax_rate,
		return_days,
		replacement_days,
		guarantee_days,
		is_vat_invoice,
		is_vip_card,
		is_enable_shelfLife,
		shelfLife_days,
		is_vendible,
		gross_weight,
		net_weight,
		code,
		merchant_brand_id,
		market_price,
		promotion_price,
		status,
		sale_way,
		sold_base,
		freight_explain,
		shipments_explain,
		freight_template_id,
		create_time,
		update_time,
		platform_id,
		enterprise_id,
		is_spu_keyword,
		demo_sale_price,
		competing_sale_price,
		store_id,
		presell_period,
		relevance_su_id,
		buy_type,
		front_serial_number
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.StandardUnitPO"
			resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		WHERE id = #{po.id}
	</select>

	<select id="findLastId" resultType="java.lang.Long">
		SELECT
		MAX(id)
		FROM standard_unit
	</select>

	<select id="findOfPage" resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		<where>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number like concat('%',#{po.merchantProductSerialNumber},'%')
			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.salePriceStart != null">
				and sale_price <![CDATA[>=]]> #{po.salePriceStart}
			</if>
			<if test="po.salePriceStop != null">
				and sale_price <![CDATA[<=]]> #{po.salePriceStop}
			</if>
			<if test="po.promotionPriceStart != null">
				and promotion_price <![CDATA[>=]]> #{po.promotionPriceStart}
			</if>
			<if test="po.promotionPriceStop != null">
				and promotion_price <![CDATA[<=]]> #{po.promotionPriceStop}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="queryStandardUnitListByBlurry" resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		<where>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number = #{po.merchantProductSerialNumber}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id = #{po.standardProductUnitId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="excludeId != null">
				and id != #{excludeId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countStandardUnitListByBlurry" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit
		<where>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number = #{po.merchantProductSerialNumber}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id = #{po.standardProductUnitId}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="excludeId != null">
				and id != #{excludeId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>

	<select id="findStandardUnitOfPageAPP" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		(SELECT p.url FROM picture p
		LEFT JOIN merchant_picture mp on
		mp.picture_id = p.id
		LEFT JOIN standard_unit_picture sup on
		sup.merchant_picture_id = mp.id
		WHERE sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url
		FROM standard_unit su
		LEFT
		JOIN standard_unit_client suc on suc.standard_unit_id = su.id
		LEFT JOIN
		standard_unit_company sucy on sucy.standard_unit_id = su.id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and sucy.company_id = #{po.companyId}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="standardUnitStockByCategoryTreeNodeId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		(SELECT p.url FROM picture p,merchant_picture mp,standard_unit_picture
		sup
		WHERE mp.picture_id = p.id and sup.merchant_picture_id = mp.id and
		sup.type = 1 and sup.standard_unit_id = su.id) picture_url
		FROM
		standard_unit su
		LEFT JOIN standard_unit_client suc on
		suc.standard_unit_id = su.id
		LEFT JOIN standard_unit_company sucy on
		sucy.standard_unit_id = su.id
		LEFT JOIN standard_product_unit spu on
		spu.id = su.standard_product_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.categoryTreeNodeId != null">
				and spu.category_tree_node_id = #{po.categoryTreeNodeId}
			</if>
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and sucy.company_id = #{po.companyId}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<!--<select id="standardUnitByFunctionModuleId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.product_category,
		su.name,
		su.is_visible,
		su.type,
		su.sale_price,
		su.demo_sale_price,
		su.competing_sale_price,
		su.is_vendible,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.stock_warning,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume,
		(SELECT p.url FROM picture p,merchant_picture mp,standard_unit_picture
		sup
		WHERE mp.picture_id = p.id and sup.merchant_picture_id = mp.id and
		sup.type = 1 and sup.standard_unit_id = su.id) picture_url
		FROM standard_unit su,standard_product_unit spu,
		(SELECT su.id FROM standard_unit su,standard_unit_client suc,standard_unit_company sucy,standard_product_unit spu,merchant m
		<if test="po.storeId != 1 and po.storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="po.storeId != 1 and po.storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and spu.id = su.standard_product_unit_id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
				and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="po.storeId == 1 or po.storeId == 2">
					and su.store_id = #{po.storeId}
				</when>
				<otherwise>
					and sus.store_id = #{po.storeId}
				</otherwise>
			</choose>
			<if test="ids != null">
				and spu.category_tree_node_id
				<include refid="inClause" />
			</if>
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{po.companyId})
			</if>
			<if test="po.companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price &lt; #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>

		</where>
		group by su.id

		) sus
		WHERE sus.id = su.id and spu.id = su.standard_product_unit_id

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>-->


	<select id="standardUnitByFunctionModuleId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.product_category,
		su.name,
		su.is_visible,
		su.type,
		su.sale_price,
		su.demo_sale_price,
		su.competing_sale_price,
		su.is_vendible,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.stock_warning,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		sus.sales_volume,
		sus.picture_url
		FROM standard_unit su,standard_product_unit spu,
		(SELECT su.id ,
		IFNULL((SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id),0)+su.sold_base  sales_volume,
		ssr.picture_url
		FROM standard_unit su,standard_unit_company sucy,merchant m,su_serach_rule ssr
		<if test="po.storeId != 1 and po.storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="po.storeId != 1 and po.storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and su.id=ssr.standard_unit_id
				and sucy.standard_unit_id = su.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="po.storeId == 1 or po.storeId == 2">
					and su.store_id = #{po.storeId}
				</when>
				<otherwise>
					and sus.store_id = #{po.storeId}
				</otherwise>
			</choose>
			<if test="ids != null">
				and su.merchant_cate_tree_node_id
				<include refid="inClause" />
			</if>
			<if test="po.clientId != null">
				and ssr.client_id LIKE concat ('%',#{po.clientId},'/%')
			</if>
			<if test="po.companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{po.companyId})
			</if>
			<if test="po.companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price &lt; #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>

		</where>
		group by su.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
		) sus
		WHERE sus.id = su.id and spu.id = su.standard_product_unit_id


	</select>



























	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit
		<where>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number like concat('%',#{po.merchantProductSerialNumber},'%')

			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.salePriceStart != null">
				and sale_price > #{po.salePriceStart}
			</if>
			<if test="po.salePriceStop != null">
				and #{po.salePriceStop} > sale_price
			</if>
			<if test="po.promotionPriceStart != null">
				and promotion_price > #{po.promotionPriceStart}
			</if>
			<if test="po.promotionPriceStop != null">
				and #{po.promotionPriceStop} > promotion_price
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>

		</where>
	</select>

	<select id="countOfPageAPP" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		LEFT JOIN standard_unit_client
		suc on suc.standard_unit_id = su.id
		LEFT JOIN standard_unit_company
		sucy on sucy.standard_unit_id = su.id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and sucy.company_id = #{po.companyId}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>

	<select id="countStandardUnitStockByCategoryTreeNodeIdAPP"
			resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		LEFT JOIN standard_unit_client
		suc on suc.standard_unit_id = su.id
		LEFT JOIN standard_unit_company
		sucy on sucy.standard_unit_id = su.id
		LEFT JOIN standard_product_unit
		spu on spu.id = su.standard_product_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.categoryTreeNodeId != null">
				and spu.category_tree_node_id = #{po.categoryTreeNodeId}
			</if>
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and sucy.company_id = #{po.companyId}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>

	<!--<select id="countstandardUnitByFunctionModuleId" resultType="java.lang.Integer">
		SELECT
		count(distinct su.id) cnt
		FROM standard_unit su,standard_unit_client suc,standard_unit_company sucy,standard_product_unit spu,merchant m
		<if test="po.storeId != 1 and po.storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="po.storeId != 1 and po.storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and spu.id = su.standard_product_unit_id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
				and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="po.storeId == 1 or po.storeId == 2">
					and su.store_id = #{po.storeId}
				</when>
				<otherwise>
					and sus.store_id = #{po.storeId}
				</otherwise>
			</choose>
			<if test="ids != null">
				and spu.category_tree_node_id
				<include refid="inClause" />
			</if>
			<if test="po.clientId != null">
				and suc.client_id = #{po.clientId}
			</if>
			<if test="po.companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{po.companyId})
			</if>
			<if test="po.companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price &lt; #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>-->

	<select id="countstandardUnitByFunctionModuleId" resultType="java.lang.Integer">
		SELECT
		count(distinct su.id) cnt
		FROM standard_unit su,standard_unit_company sucy,merchant m,su_serach_rule ssr
		<if test="po.storeId != 1 and po.storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="po.storeId != 1 and po.storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">

				and sucy.standard_unit_id = su.id
				and ssr.standard_unit_id=su.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="po.storeId == 1 or po.storeId == 2">
					and su.store_id = #{po.storeId}
				</when>
				<otherwise>
					and sus.store_id = #{po.storeId}
				</otherwise>
			</choose>
			<if test="ids != null">
				and su.merchant_cate_tree_node_id
				<include refid="inClause" />
			</if>
			<if test="po.clientId != null">
				and ssr.client_id like concat ('%',#{po.clientId},'/%')
			</if>
			<if test="po.companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{po.companyId})
			</if>
			<if test="po.companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and su.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and su.sale_price &lt; #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="po.soldBase != null">
				and su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>







	<select id="findAll" resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		<where>
			<if test="po.id != null">
				and id =
				#{po.id}
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findBymerchantProdId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,su.merchant_id,
		(SELECT name FROM merchant WHERE id = su.merchant_id) merchant_name,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		su.jd_profit,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su
		where su.id
		<include refid="inClause" />
	</select>

	<select id="countRecord" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM
		standard_unit
		WHERE standard_product_unit_id = #{standardProductUnitId}
	</select>

	<select id="findStandardUnitIdAndName" resultMap="standardUnitMap">
		SELECT
		id,
		name
		FROM standard_unit
		<where>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>


	<select id="standardUnitByStandardUnitCombinationIdAndSuId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		su.sold_base,
		su.stock_warning,
		su.sale_way,
		su.store_id,
		su.buy_type,
		su.front_serial_number,
		su.status,
		su.supplier_id,
		spu.commodity_template_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM
		(SELECT su.id ,sucsu.sort_value FROM standard_unit su,standard_unit_client suc,standard_unit_company sucy,standard_unit_combination_su sucsu,standard_product_unit spu,merchant m
		<if test="storeId != 1 and storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			sucsu.source in (1,2)
			<if test="storeId != 1 and storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			and suc.standard_unit_id = su.id
			and sucy.standard_unit_id = su.id
			and sucsu.standard_unit_id = su.id
			and su.standard_product_unit_id = spu.id
			and su.merchant_id = m.id
			<if test="showAll == null ">
				and su.is_vendible = 0
				<if test="couponType != 1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="storeId == 1 or storeId == 2">
					and su.store_id = #{storeId}
				</when>
				<otherwise>
					and sus.store_id = #{storeId}
				</otherwise>
			</choose>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>

			<if test="suIds != null">
				and su.id in
				<foreach collection="suIds" item="suId" open="(" separator=","
						 close=")">
					#{suId}
				</foreach>
			</if>
			<!--
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			-->
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="standardUnitCombinationId != null">
				and sucsu.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and ( su.enterprise_id = #{enterpriseId} OR su.enterprise_id is null)
			</if>
			<if test="saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
		group by su.id
		ORDER BY sucsu.sort_value

		) sus,standard_unit su,standard_product_unit spu
		WHERE sus.id = su.id and su.standard_product_unit_id = spu.id

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>



	<select id="standardUnitByStandardUnitCombinationId" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		su.sold_base,
		su.stock_warning,
		su.sale_way,
		su.store_id,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM
		(SELECT su.id ,sucsu.sort_value FROM standard_unit su,standard_unit_client suc,standard_unit_company sucy,standard_unit_combination_su sucsu,standard_product_unit spu,merchant m
		<if test="storeId != 1 and storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			sucsu.source in (1,2)
			<if test="storeId != 1 and storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and sucsu.standard_unit_id = su.id
				and su.standard_product_unit_id = spu.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType != 1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="storeId == 1 or storeId == 2">
					and su.store_id = #{storeId}
				</when>
				<otherwise>
					and sus.store_id = #{storeId}
				</otherwise>
			</choose>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="standardUnitCombinationId != null">
				and sucsu.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and ( su.enterprise_id = #{enterpriseId} OR su.enterprise_id is null)
			</if>
			<if test="saleWay == 7">
				and su.sale_way in (4,6)
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
		group by su.id
		ORDER BY sucsu.sort_value

		) sus,standard_unit su,standard_product_unit spu
		WHERE sus.id = su.id and su.standard_product_unit_id = spu.id

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countstandardUnitByStandardUnitCombinationId" resultType="java.lang.Integer">
		SELECT
		count(distinct su.id) cnt
		FROM standard_unit
		su,standard_unit_client suc,standard_unit_company
		sucy,standard_unit_combination_su sucsu,merchant m
		<if test="storeId != 1 and storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="storeId != 1 and storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and sucsu.standard_unit_id = su.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
				and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="storeId == 1 or storeId == 2">
					and su.store_id = #{storeId}
				</when>
				<otherwise>
					and sus.store_id = #{storeId}
				</otherwise>
			</choose>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="standardUnitCombinationId != null">
				and sucsu.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and (su.enterprise_id = #{enterpriseId} OR su.enterprise_id IS NULL)
			</if>
			<if test="buyType != null">
				and buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and front_serial_number = #{frontSerialNumber}
			</if>
			<if test="saleWay== 7">
				and su.sale_way in (4,6)
			</if>
		</where>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="findBaseByConditionOfPage" resultMap="standardUnitMap">
		SELECT
 su.id,   su.merchant_product_serial_number,   su.merchant_id,   su.standard_product_unit_id,   su.merchant_cate_tree_node_id,   su.product_category,
su.merchant_series_id,   su.name,   su.alias,   su.is_visible,   su.subtitle,   su.supplier_id,   su.type,   su.remark,   su.sale_price,   su.sale_tax_rate,   su.return_days,
su.replacement_days,   su.guarantee_days,   su.is_vat_invoice,   su.is_vip_card,   su.is_enable_shelfLife,   su.shelfLife_days,   su.is_vendible,   su.gross_weight,   su.net_weight,   su.code,   su.merchant_brand_id,
   su.market_price,  spu.supplier_id as supplierId, su.promotion_price,   su.status,   su.sale_way,   su.sold_base,   su.freight_explain,   su.shipments_explain,
   su.freight_template_id,   su.create_time,   su.update_time,   su.platform_id,   su.enterprise_id,   su.is_spu_keyword,   su.demo_sale_price,   su.competing_sale_price,
   su.store_id,   su.presell_period,   su.relevance_su_id,   su.buy_type,   su.front_serial_number

   		FROM standard_unit su
		left join standard_product_unit spu on spu.id = su.standard_product_unit_id
		<where>
			<if test="true">
				and NOT EXISTS(select sucsu.id from standard_unit_combination_su sucsu where su.id = sucsu.standard_unit_id and sucsu.standard_unit_combination_id = #{standardUnitCombinationId})
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and  su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and  su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and  su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and  su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and  su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and  su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and  su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and  su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and spu.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and  su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and  su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and  su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and  su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and  su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and  su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and  su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and  su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and  su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and  su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and  su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and  su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and  su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and  su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and  su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and  su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and  su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and  su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and  su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and  su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and  su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and  su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and  su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and  su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and  su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and  su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and  su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and (su.enterprise_id = #{po.enterpriseId} OR su.enterprise_id is null)
			</if>
			<if test="po.buyType != null">
				and  su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and  su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countfindBaseByConditionOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		left join standard_product_unit spu on spu.id = su.standard_product_unit_id
		<where>
			<if test="true">
				and NOT EXISTS(select sucsu.id from standard_unit_combination_su sucsu where su.id = sucsu.standard_unit_id and sucsu.standard_unit_combination_id = #{standardUnitCombinationId})
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and  su.merchant_product_serial_number =
				#{po.merchantProductSerialNumber}
			</if>
			<if test="po.merchantId != null">
				and  su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and  su.standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and  su.merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and  su.merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and  su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and  su.alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and  su.is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and  su.subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and  spu.supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and  su.type = #{po.type}
			</if>
			<if test="po.remark != null">
				and  su.remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and  su.sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and  su.sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and  su.return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and  su.replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and  su.guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and  su.is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and  su.is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and  su.is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and  su.shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and  su.is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and  su.gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and  su.net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and  su.code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and  su.merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and  su.market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and  su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and  su.status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and  su.sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and  su.sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and  su.freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and  su.shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and  su.freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and  su.create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and  su.update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and  su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and  (su.enterprise_id = #{po.enterpriseId} OR su.enterprise_id is null)
			</if>
			<if test="po.buyType != null">
				and  su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and  su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="findByStandardUnitCombinationIdOfPage" resultMap="standardUnitMap">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su,standard_unit_combination_category succ,category_tree_node_category ctnc,standard_product_unit spu,merchant m
		<where>
			<if test="true">
				and succ.category_tree_node_id = ctnc.front_category_tree_node_id
				and ctnc.queen_category_tree_node_id = spu.category_tree_node_id
				and spu.id = su.standard_product_unit_id
				and su.merchant_id = m.id
				and m.is_stop = 0
			</if>
			<if test="standardUnitCombinationId != null">
				and succ.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="findStandardUnitById" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.stock_warning,
		su.create_userid,
		su.create_username,
		su.create_userip,
		su.create_usermac,
		su.update_userid,
		su.update_username,
		su.update_userip,
		su.update_usermac,
		su.is_spu_keyword,
		su.demo_sale_price,
		su.competing_sale_price,
		su.store_id,
		su.presell_period,
		su.relevance_su_id,
		su.buy_type,
		su.front_serial_number,
		(SELECT name from standard_unit WHERE id = su.relevance_su_id) relevance_su_name,
		sud.content,
		sud.content_url,
		spu.commodity_template_id,
		(SELECT sum(sales_volume) FROM merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su, standard_unit_describe sud,standard_product_unit spu
		WHERE su.id = sud.standard_unit_id and su.standard_product_unit_id = spu.id and su.id = #{standardUnitId}
	</select>

	<select id="findByTypeTag" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		su.sold_base,
		su.stock_warning,
		su.sale_way,
		su.store_id,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su,standard_product_unit spu,
		(SELECT su.id FROM standard_unit
		su,standard_unit_client suc,standard_unit_company
		sucy,standard_unit_combination_tag suct,standard_product_unit spu,standard_unit_tag sut,merchant m
		<if test="storeId != 1 and storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="storeId != 1 and storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suct.tag_id = sut.tag_id
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and sut.standard_unit_id = su.id
				and su.standard_product_unit_id = spu.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="storeId == 1 or storeId == 2">
					and su.store_id = #{storeId}
				</when>
				<otherwise>
					and sus.store_id = #{storeId}
				</otherwise>
			</choose>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="standardUnitCombinationId != null">
				and suct.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and su.enterprise_id = #{enterpriseId}
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
			<if test="saleWay ==7">
				and su.sale_way in (4,6)
			</if>
		</where>
		group by su.id
		ORDER BY su.id desc
		) sus
		where sus.id = su.id and su.standard_product_unit_id = spu.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countByTypeTag" resultType="java.lang.Integer">
		SELECT
		count(distinct su.id) cnt
		FROM standard_unit su,standard_unit_client suc,standard_unit_company
		sucy,standard_unit_combination_tag suct,standard_product_unit spu,standard_unit_tag sut,merchant m
		<if test="storeId != 1 and storeId != 2">
			,standard_unit_store sus
		</if>
		<where>
			<if test="storeId != 1 and storeId != 2">
				and sus.standard_unit_id=su.id
			</if>
			<if test="true">
				and suct.tag_id = sut.tag_id
				and suc.standard_unit_id = su.id
				and sucy.standard_unit_id = su.id
				and sut.standard_unit_id = su.id
				and su.standard_product_unit_id = spu.id
				and su.merchant_id = m.id
				and su.is_vendible = 0
				<if test="couponType!=1">
					and su.is_visible = 0
				</if>
				and m.is_stop = 0
			</if>
			<choose>
				<when test="storeId == 1 or storeId == 2">
					and su.store_id = #{storeId}
				</when>
				<otherwise>
					and sus.store_id = #{storeId}
				</otherwise>
			</choose>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="standardUnitCombinationId != null">
				and suct.standard_unit_combination_id = #{standardUnitCombinationId}
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and su.enterprise_id = #{enterpriseId}
			</if>
			<if test="saleWay ==7">
				and su.sale_way in (4,6)
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>

		</where>
	</select>

	<select id="findByStandardUnitIds" resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		where id
		<include refid="inClause" />
		order by front_serial_number,id desc
	</select>

	<select id="findByStandardProductUnitIds" resultMap="standardUnitMap">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.buy_type,
		su.front_serial_number,
		su.stock_warning
		FROM standard_unit su,standard_unit_client suc,standard_unit_company sucy,standard_product_unit spu,merchant m
		WHERE suc.standard_unit_id = su.id
		and sucy.standard_unit_id = su.id
		and spu.id = su.standard_product_unit_id
		and su.merchant_id = m.id
		and m.is_stop = 0
		and spu.category_tree_node_id <include refid="inClause" />
		group by su.id
		order by su.front_serial_number,su.id desc
	</select>

	<select id="findByTagIds" resultMap="standardUnitMap">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.buy_type,
		su.front_serial_number,
		su.stock_warning
		FROM standard_unit su,standard_unit_tag sut,merchant m
		WHERE sut.standard_unit_id = su.id
		and su.merchant_id = m.id
		and m.is_stop = 0
		and sut.tag_id <include refid="inClause" />
		group by su.id
		order by su.front_serial_number,su.id desc
	</select>

	<select id="findStandardUnitExtendOfPage" resultMap="standardUnitCondition">
		SELECT
		<include refid="standardUnitColumns" />,
		(SELECT name FROM merchant WHERE id = su.merchant_id) merchant_name,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = id) sales_volume
		FROM standard_unit
		<where>
			<if test="ids != null">
				and id <include refid="inClause" />
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number like concat('%',#{po.merchantProductSerialNumber},'%')
			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countStandardUnitExtendOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit
		<where>
			<if test="ids != null">
				and id <include refid="inClause" />
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and merchant_product_serial_number like concat('%',#{po.merchantProductSerialNumber},'%')
			</if>
			<if test="po.merchantId != null">
				and merchant_id = #{po.merchantId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id =
				#{po.standardProductUnitId}
			</if>
			<if test="po.merchantCateTreeNodeId != null">
				and merchant_cate_tree_node_id =
				#{po.merchantCateTreeNodeId}
			</if>
			<if test="po.merchantSeriesId != null">
				and merchant_series_id = #{po.merchantSeriesId}
			</if>
			<if test="po.name != null">
				and name like concat('%',#{po.name},'%')
			</if>
			<if test="po.alias != null">
				and alias = #{po.alias}
			</if>
			<if test="po.isVisible != null">
				and is_visible = #{po.isVisible}
			</if>
			<if test="po.subtitle != null">
				and subtitle = #{po.subtitle}
			</if>
			<if test="po.supplierId != null">
				and supplier_id = #{po.supplierId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.salePrice != null">
				and sale_price = #{po.salePrice}
			</if>
			<if test="po.saleTaxRate != null">
				and sale_tax_rate = #{po.saleTaxRate}
			</if>
			<if test="po.returnDays != null">
				and return_days = #{po.returnDays}
			</if>
			<if test="po.replacementDays != null">
				and replacement_days = #{po.replacementDays}
			</if>
			<if test="po.guaranteeDays != null">
				and guarantee_days = #{po.guaranteeDays}
			</if>
			<if test="po.isVatInvoice != null">
				and is_vat_invoice = #{po.isVatInvoice}
			</if>
			<if test="po.isVipCard != null">
				and is_vip_card = #{po.isVipCard}
			</if>
			<if test="po.isEnableShelflife != null">
				and is_enable_shelfLife = #{po.isEnableShelflife}
			</if>
			<if test="po.shelflifeDays != null">
				and shelfLife_days = #{po.shelflifeDays}
			</if>
			<if test="po.isVendible != null">
				and is_vendible = #{po.isVendible}
			</if>
			<if test="po.grossWeight != null">
				and gross_weight = #{po.grossWeight}
			</if>
			<if test="po.netWeight != null">
				and net_weight = #{po.netWeight}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.merchantBrandId != null">
				and merchant_brand_id = #{po.merchantBrandId}
			</if>
			<if test="po.marketPrice != null">
				and market_price = #{po.marketPrice}
			</if>
			<if test="po.promotionPrice != null">
				and promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.saleWay != null">
				and sale_way = #{po.saleWay}
			</if>
			<if test="po.soldBase != null">
				and sold_base = #{po.soldBase}
			</if>
			<if test="po.freightExplain != null">
				and freight_explain = #{po.freightExplain}
			</if>
			<if test="po.shipmentsExplain != null">
				and shipments_explain = #{po.shipmentsExplain}
			</if>
			<if test="po.freightTemplateId != null">
				and freight_template_id = #{po.freightTemplateId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.buyType != null">
				and buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>

	<!--<select id="findByKeywordOfPage" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		su.sold_base,
		su.store_id,
		su.stock_warning,
		su.sale_way,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		sales_volume
		FROM standard_unit su,standard_product_unit spu,
		(SELECT su.id,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su
		LEFT JOIN standard_unit_client suc on su.id = suc.standard_unit_id
		LEFT JOIN standard_unit_company sucy on su.id = sucy.standard_unit_id
		LEFT JOIN su_serach_rule susr on su.id = susr.standard_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="true">
				and su.is_vendible = 0 and su.is_visible = 0
			</if>
			<if test="saleWay!= null and saleWay==7">
				and su.sale_way in (4,6)
			</if>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="name != null">
				and (susr.standard_unit_name like CONCAT('%',#{name},'%')

					or susr.standard_unit_keyword like CONCAT('%',#{name},'%')

					or susr.standard_unit_tag like CONCAT('%',#{name},'%')


					or susr.standard_unit_category like CONCAT('%',#{name},'%'))

			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
		GROUP BY su.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY REPLACE(susr.standard_unit_keyword,#{name},''),REPLACE(susr.standard_unit_name,#{name},''),REPLACE(susr.standard_unit_tag,#{name},''),REPLACE(susr.standard_unit_category,#{name},'')
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>) sus
		WHERE sus.id = su.id and su.standard_product_unit_id = spu.id
	</select>
-->
	<select id="findByKeywordOfPage" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.name,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.market_price,
		su.status,
		su.sold_base,
		su.store_id,
		su.stock_warning,
		su.sale_way,
		su.buy_type,
		su.front_serial_number,
		spu.commodity_template_id,
		sus.picture_url,
		sales_volume
		FROM standard_unit su,standard_product_unit spu,
		(SELECT su.id,susr.picture_url,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume
		FROM standard_unit su
		LEFT JOIN su_serach_rule susr on su.id = susr.standard_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="true">
				and su.is_vendible = 0 and su.is_visible = 0
			</if>
			<if test="saleWay!= null and saleWay==7">
				and su.sale_way in (4,6)
			</if>
			<if test="clientId != null">
				and susr.client_id like concat('%',#{clientId},'/%')
			</if>
			<if test="companyId != null">
				and (susr.company_id like concat('%','-1/','%') or susr.company_id like concat('%',#{companyId},'/%'))
			</if>
			<if test="companyType != null">
				and susr.company_type  like concat('%',#{companyType},'/%')
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="name != null">
				and (susr.standard_unit_name like CONCAT('%',#{name},'%')
				or susr.standard_unit_keyword like CONCAT('%',#{name},'%')
				or su.name like CONCAT('%',#{name},'%')
				or susr.standard_unit_tag like CONCAT('%',#{name},'%')
				or susr.standard_unit_category like CONCAT('%',#{name},'%'))

			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and su.enterprise_id = #{enterpriseId}
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
		GROUP BY su.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY REPLACE(susr.standard_unit_keyword,#{name},''),REPLACE(susr.standard_unit_name,#{name},''),REPLACE(susr.standard_unit_tag,#{name},''),REPLACE(susr.standard_unit_category,#{name},'')
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>) sus
		WHERE sus.id = su.id and su.standard_product_unit_id = spu.id
	</select>
	<!--<select id="countByKeywordOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		LEFT JOIN standard_unit_client suc on su.id = suc.standard_unit_id
		LEFT JOIN standard_unit_company sucy on su.id = sucy.standard_unit_id
		LEFT JOIN standard_product_unit spu on su.standard_product_unit_id = spu.id
		LEFT JOIN su_serach_rule susr on su.id = susr.standard_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="true">
				and su.is_vendible = 0 and su.is_visible = 0
			</if>
			<if test="saleWay != null and saleWay==7">
				and su.sale_way in (4,6)
			</if>
			<if test="clientId != null">
				and suc.client_id = #{clientId}
			</if>
			<if test="companyId != null">
				and (sucy.company_id = -1 or sucy.company_id = #{companyId})
			</if>
			<if test="companyId == null">
				and sucy.company_id = -1
			</if>
			<if test="companyType != null">
				and sucy.company_type = #{companyType}
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="name != null">
				and (susr.standard_unit_name like CONCAT('%',#{name},'%')
				or susr.standard_unit_keyword like CONCAT('%',#{name},'%')
				or susr.standard_unit_tag like CONCAT('%',#{name},'%')
				or susr.standard_unit_category like CONCAT('%',#{name},'%'))
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
	</select>-->
	<select id="countByKeywordOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		LEFT JOIN su_serach_rule susr on su.id = susr.standard_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="true">
				and su.is_vendible = 0 and su.is_visible = 0
			</if>
			<if test="saleWay != null and saleWay==7">
				and su.sale_way in (4,6)
			</if>
			<if test="clientId != null">
				AND  susr.client_id like concat('%',#{clientId},'/%')
			</if>
			<if test="companyId != null">
				and (susr.company_id like concat('%','-1/','%') or susr.company_id like concat('%',#{companyId},'/%'))
			</if>
			<if test="companyId == null">
				and susr.company_id like concat('%','-1/','%')
			</if>
			<if test="companyType != null">
				AND  susr.company_type like concat('%',#{companyType},'/%')
			</if>
			<if test="salePrice != null">
				and su.sale_price &lt; #{salePrice}
			</if>
			<if test="name != null">
				and (susr.standard_unit_name like CONCAT('%',#{name},'%')
				or susr.standard_unit_keyword like CONCAT('%',#{name},'%')
				or susr.standard_unit_tag like CONCAT('%',#{name},'%')
				or susr.standard_unit_category like CONCAT('%',#{name},'%'))
			</if>
			<if test="platformId != null">
				and su.platform_id = #{platformId}
			</if>
			<if test="enterpriseId != null">
				and su.enterprise_id = #{enterpriseId}
			</if>
			<if test="buyType != null">
				and su.buy_type = #{buyType}
			</if>
			<if test="frontSerialNumber != null">
				and su.front_serial_number = #{frontSerialNumber}
			</if>
		</where>
	</select>

	<select id="querySuCombinationBySu" resultType="java.lang.Long">
		select
		distinct scs.standard_unit_combination_id
		from standard_unit_combination_su scs
		where
		scs.standard_unit_id = #{suId}
	</select>

	<select id="querySuCombinationByTag" resultType="java.lang.Long">
		select
		distinct suct.standard_unit_combination_id
		from standard_unit_tag sut
		left join standard_unit_combination_tag suct on suct.tag_id = sut.tag_id
		where
		sut.standard_unit_id = #{suId}
	</select>

	<select id="querySuCombinationByTreeNode" resultType="java.lang.Long">
		SELECT distinct succ.standard_unit_combination_id
		from standard_unit_combination_category succ
		LEFT JOIN category_tree_node_category ctnc on succ.category_tree_node_id = ctnc.front_category_tree_node_id
		LEFT JOIN standard_product_unit spu on ctnc.queen_category_tree_node_id = spu.category_tree_node_id
		LEFT JOIN standard_unit su on spu.id = su.standard_product_unit_id
		WHERE
		su.id = #{suId}
	</select>

	<select id="findByStandardUnitName" resultMap="standardUnitMap">
		SELECT
		<include refid="standardUnitColumns" />
		FROM standard_unit
		<where>
			<if test="standardUnitId != null">
				and id = #{standardUnitId}
			</if>
			<if test="platformId!=null">
				AND  platform_id =#{platformId}
			</if>
			<if test="enterpriseId != null">
				and enterprise_id = #{enterpriseId}
			</if>
			<if test="standardUnitName != null">
				and name like concat('%',#{standardUnitName},'%')
			</if>
		</where>
		limit 0,20
	</select>

	<select id="countSuByCategoryTreeNodeIds"
			resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM standard_unit su
		LEFT JOIN standard_product_unit spu on spu.id = su.standard_product_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.suIds != null">
				and su.id in
				<foreach collection="po.suIds" item="suId" open="(" separator=","
						 close=")">
					#{suId}
				</foreach>
			</if>
			<if test="po.categoryTreeNodeId != null">
				and spu.category_tree_node_id = #{po.categoryTreeNodeId}
			</if>
			<if test="po.categoryTreeNodeIds != null">
				and spu.category_tree_node_id in
				<foreach collection="po.categoryTreeNodeIds" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number = #{po.merchantProductSerialNumber}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.beginSalePrice != null">
				and su.sale_price &gt;= #{po.beginSalePrice}
			</if>
			<if test="po.endSalePrice != null">
				and su.sale_price &lt; #{po.endSalePrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.beginPromotionPrice != null">
				and su.promotion_price &gt;= #{po.beginPromotionPrice}
			</if>
			<if test="po.endPromotionPrice != null">
				and su.promotion_price &lt; #{po.endPromotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id = #{po.standardProductUnitId}
			</if>
			<if test="po.platform_id != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
	</select>

	<select id="suByCategoryTreeNodeIdsOfPage" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.merchant_product_serial_number,
		su.merchant_id,
		su.standard_product_unit_id,
		su.merchant_cate_tree_node_id,
		su.product_category,
		su.merchant_series_id,
		su.name,
		su.alias,
		su.is_visible,
		su.subtitle,
		su.supplier_id,
		su.type,
		su.remark,
		su.sale_price,su.demo_sale_price,su.competing_sale_price,
		su.sale_tax_rate,
		su.return_days,
		su.replacement_days,
		su.guarantee_days,
		su.is_vat_invoice,
		su.is_vip_card,
		su.is_enable_shelfLife,
		su.shelfLife_days,
		su.is_vendible,
		su.gross_weight,
		su.net_weight,
		su.code,
		su.merchant_brand_id,
		su.market_price,
		su.promotion_price,
		su.status,
		su.sale_way,
		su.sold_base,
		su.freight_explain,
		su.shipments_explain,
		su.freight_template_id,
		su.create_time,
		su.update_time,
		su.platform_id,
		su.enterprise_id,
		su.buy_type,
		su.front_serial_number,
		su.store_id
		FROM standard_unit su
		LEFT JOIN standard_product_unit spu on spu.id = su.standard_product_unit_id
		LEFT JOIN merchant m on su.merchant_id = m.id
		<where>
			m.is_stop = 0
			<if test="po.suIds != null">
				and su.id in
				<foreach collection="po.suIds" item="suId" open="(" separator=","
						 close=")">
					#{suId}
				</foreach>
			</if>
			<if test="po.categoryTreeNodeId != null">
				and spu.category_tree_node_id = #{po.categoryTreeNodeId}
			</if>
			<if test="po.categoryTreeNodeIds != null">
				and spu.category_tree_node_id in
				<foreach collection="po.categoryTreeNodeIds" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>
			<if test="po.merchantProductSerialNumber != null">
				and su.merchant_product_serial_number = #{po.merchantProductSerialNumber}
			</if>
			<if test="po.name != null">
				and su.name like concat('%',#{po.name},'%')
			</if>
			<if test="po.salePrice != null">
				and su.sale_price = #{po.salePrice}
			</if>
			<if test="po.beginSalePrice != null">
				and su.sale_price &gt;= #{po.beginSalePrice}
			</if>
			<if test="po.endSalePrice != null">
				and su.sale_price &lt; #{po.endSalePrice}
			</if>
			<if test="po.promotionPrice != null">
				and su.promotion_price = #{po.promotionPrice}
			</if>
			<if test="po.beginPromotionPrice != null">
				and su.promotion_price &gt;= #{po.beginPromotionPrice}
			</if>
			<if test="po.endPromotionPrice != null">
				and su.promotion_price &lt; #{po.endPromotionPrice}
			</if>
			<if test="po.status != null">
				and su.status = #{po.status}
			</if>
			<if test="po.isVisible != null">
				and su.is_visible = #{po.isVisible}
			</if>
			<if test="po.standardProductUnitId != null">
				and su.standard_product_unit_id = #{po.standardProductUnitId}
			</if>
			<if test="po.platformId != null">
				and su.platform_id = #{po.platformId}
			</if>
			<if test="po.enterpriseId != null">
				and su.enterprise_id = #{po.enterpriseId}
			</if>
			<if test="po.merchantId != null">
				and su.merchant_id = #{po.merchantId}
			</if>
			<if test="po.buyType != null">
				and su.buy_type = #{po.buyType}
			</if>
			<if test="po.frontSerialNumber != null">
				and su.front_serial_number = #{po.frontSerialNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="findStandardUnitByStoreMenuIdOfPage" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.`name`,
		su.sale_price,
		su.market_price,
		su.sale_way,
		su.status,
		su.merchant_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		su.stock_warning,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume,
		spu.commodity_template_id
		from standard_unit su,standard_product_unit spu,
		(SELECT
		su.id
		from standard_unit su,store_menu_node_standard_unit smnsu,merchant m
		WHERE smnsu.standard_unit_id = su.id
		and su.merchant_id = m.id and m.is_stop = 0
		and smnsu.store_menu_node_id = #{storeMenuNodeId}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>) a
		WHERE a.id = su.id and su.standard_product_unit_id = spu.id
	</select>

	<select id="countStandardUnitByStoreMenuIdOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		from standard_unit su,store_menu_node_standard_unit smnsu,merchant m
		WHERE
		smnsu.standard_unit_id = su.id
		and su.merchant_id = m.id and m.is_stop = 0
		and smnsu.store_menu_node_id = #{storeMenuNodeId}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
	</select>

	<select id="findStandardUnitByStoreIdOfPage" resultMap="standardUnitCondition">
		SELECT
		su.id,
		su.`name`,
		su.sale_price,
		su.market_price,
		su.status,
		su.sale_way,
		su.merchant_id,
		(SELECT p.url FROM picture p,merchant_picture
		mp,standard_unit_picture sup
		WHERE mp.picture_id = p.id and
		sup.merchant_picture_id = mp.id and sup.type = 1 and
		sup.standard_unit_id = su.id) picture_url,
		su.stock_warning,
		(SELECT sum(sales_volume) from merchant_prod_sales_record WHERE standard_unit_id = su.id) sales_volume,
		spu.commodity_template_id
		from standard_unit su,standard_product_unit spu,
		(SELECT
		su.id
		from standard_unit su,standard_unit_store sus,merchant m
		WHERE
		sus.standard_unit_id = su.id
		and su.merchant_id = m.id and m.is_stop = 0
		and sus.store_id = #{storeId}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>) a
		WHERE a.id = su.id and su.standard_product_unit_id = spu.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY su.id desc
			</otherwise>
		</choose>
	</select>

	<select id="countStandardUnitByStoreIdOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		from standard_unit su,standard_unit_store sus,merchant m
		WHERE
		sus.standard_unit_id = su.id
		and su.merchant_id = m.id and m.is_stop = 0
		and sus.store_id = #{storeId}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
	</select>

	<!-- 查询优惠券关联的商品在指定门店下的个数（确定是否显示立即使用按钮） -->
	<select id="countCouponSuBySuId" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		from standard_unit su
		left join standard_unit_company suc on su.id = suc.standard_unit_id
		<if test="storeId != 1 and storeId != 2">
			left join standard_unit_store sus on su.id = sus.standard_unit_id
		</if>
		LEFT JOIN merchant m on su.merchant_id = m.id
		WHERE m.is_stop = 0
		and su.id = #{suId}
		<choose>
			<when test="storeId == 1 or storeId == 2">
				and su.store_id = #{storeId}
			</when>
			<otherwise>
				and sus.store_id = #{storeId}
			</otherwise>
		</choose>
		and (suc.company_id = -1 or suc.company_id = #{companyId})
		and suc.company_type = #{companyType}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
	</select>

	<!-- 查询优惠券关联的商品组在指定门店下的个数（确定是否显示立即使用按钮） -->
	<select id="countCouponSuBySuCombinationId" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		from standard_unit su
		left join standard_unit_combination_su sucs on su.id = sucs.standard_unit_id
		left join standard_unit_company suc on su.id = suc.standard_unit_id
		<if test="storeId != 1 and storeId != 2">
			left join standard_unit_store sus on su.id = sus.standard_unit_id
		</if>
		LEFT JOIN merchant m on su.merchant_id = m.id
		WHERE m.is_stop = 0
		and sucs.standard_unit_combination_id = #{suCombinationId}
		<choose>
			<when test="storeId == 1 or storeId == 2">
				and su.store_id = #{storeId}
			</when>
			<otherwise>
				and sus.store_id = #{storeId}
			</otherwise>
		</choose>
		and (suc.company_id = -1 or suc.company_id = #{companyId})
		and suc.company_type = #{companyType}
		and su.platform_id = #{platformId}
		<!-- 前台门店商品查询过滤不可见商品 -->
		and su.is_visible=0
	</select>

	<select id="findSpuInfo" resultType="java.util.HashMap">
		select spu.commodity_template_id commodityTemplateId,
		su.id suId
		from  standard_unit su
		LEFT JOIN standard_product_unit spu ON spu.id = su.standard_product_unit_id
		where su.id in
		<foreach collection="suIdList" item="suId" open="(" close=")" separator=",">
			#{suId}
		</foreach>
	</select>

	<select id="findPictureInfo" resultType="java.util.HashMap">
		SELECT p.url pictureUrl,
		sup.standard_unit_id suId
		FROM picture p,
		merchant_picture mp,
		standard_unit_picture sup
		WHERE mp.picture_id = p.id
		and
		sup.merchant_picture_id = mp.id
		and sup.type = 1
		and sup.standard_unit_id in
		<foreach collection="suIdList" item="suId" open="(" close=")" separator=",">
			#{suId}
		</foreach>
	</select>


	<select id="findStandardUnitCount" resultType="java.lang.Integer">
		SELECT count(1)
		FROM
		standard_unit
	</select>
	<select id="findStandardUnitAllByPage" resultMap="standardUnitMap">
		SELECT id,name,is_spu_keyword,standard_product_unit_id,merchant_id
		FROM
		standard_unit
		limit #{i},#{pageSize}
	</select>
</mapper>
