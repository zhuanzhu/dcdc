<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.MembershipAuthorityReadDAO">
	<resultMap type="com.egeo.components.product.po.MembershipAuthorityPO" id="membershipAuthorityMap">
		<result property="id" column="id" />
		<result property="membershipId" column="membership_id" />
		<result property="authorityId" column="authority_id" />
		<result property="isStop" column="is_stop" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<resultMap type="com.egeo.components.product.condition.MembershipAuthorityCondition" id="membershipAuthorityConditionMap" extends="membershipAuthorityMap">
		<result property="authorityName" column="authority_name" />
		<result property="membershipName" column="membership_name" />
	</resultMap>

	<sql id="membershipAuthorityColumns">
		id,
		membership_id,
		authority_id,
		is_stop,
		platform_id,
		create_time,
		update_time
	</sql>

	<select id="findById" parameterType="com.egeo.components.product.po.MembershipAuthorityPO" resultMap="membershipAuthorityMap">
		SELECT
		<include refid="membershipAuthorityColumns" />
		FROM membership_authority
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="membershipAuthorityMap">
		SELECT
		<include refid="membershipAuthorityColumns" />
		FROM membership_authority
		<where>
			<if test="po.membershipId != null">
				and membership_id = #{po.membershipId}
			</if>
			<if test="po.authorityId != null">
				and authority_id = #{po.authorityId}
			</if>
			<if test="po.isStop != null">
				and is_stop = #{po.isStop}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM membership_authority
		<where>
			<if test="po.membershipId != null">
				and membership_id = #{po.membershipId}
			</if>
			<if test="po.authorityId != null">
				and authority_id = #{po.authorityId}
			</if>
			<if test="po.isStop != null">
				and is_stop = #{po.isStop}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="membershipAuthorityMap">
		SELECT
		<include refid="membershipAuthorityColumns" />
		FROM membership_authority
		<where>
			<if test="po.membershipId != null">
				and membership_id = #{po.membershipId}
			</if>
			<if test="po.authorityId != null">
				and authority_id = #{po.authorityId}
			</if>
			<if test="po.isStop != null">
				and is_stop = #{po.isStop}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	
	<select id="findModifyYesterday" resultMap="membershipAuthorityConditionMap">
		SELECT
		a.authority_name,
		ma.platform_id,
		ma.membership_id,
		m.membership_name
		FROM membership_authority ma 
		LEFT JOIN authority a ON ma.authority_id = a.id
		LEFT JOIN membership m ON ma.membership_id = m.id 
		WHERE ma.is_stop = 0 and (
			ma.create_time BETWEEN DATE_FORMAT(NOW() - INTERVAL 1 DAY,'%Y-%m-%d') AND DATE_FORMAT(NOW(),'%Y-%m-%d')
			OR ma.update_time BETWEEN DATE_FORMAT(NOW() - INTERVAL 1 DAY,'%Y-%m-%d') AND DATE_FORMAT(NOW(),'%Y-%m-%d')
		)
	</select>
</mapper>
	