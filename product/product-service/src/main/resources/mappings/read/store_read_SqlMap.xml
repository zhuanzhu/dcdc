<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.StoreReadDAO">
	<resultMap type="com.egeo.components.product.po.StorePO" id="storeMap">
		<result property="id" column="id" />
		<result property="serialNumber" column="serial_number" />
		<result property="companyId" column="company_id" />
		<result property="activityCode" column="activity_code" />
		<result property="name" column="name" />
		<result property="isDetail" column="is_detail" />
		<result property="provinceId" column="province_id" />
		<result property="province" column="province" />
		<result property="cityId" column="city_id" />
		<result property="city" column="city" />
		<result property="countyId" column="county_id" />
		<result property="county" column="county" />
		<result property="areaId" column="area_id" />
		<result property="area" column="area" />
		<result property="detailAddress" column="detail_address" />
		<result property="discount" column="discount" />
		<result property="hasStoreMenu" column="has_store_menu" />
		<result property="description" column="description" />
		<result property="categoryBannerId" column="category_banner_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
	</resultMap>

	<resultMap type="com.egeo.components.product.condition.StoreCondition" 
	id="storeExtMap" extends="storeMap">
		<result property="pids" column="pids" />
		<result property="parentId" column="parent_id" />
		<result property="storeTreeId" column="store_tree_id" />
		<result property="nodeId" column="node_id" />
		<result property="listSort" column="list_sort" />
		<result property="storeMenuTreeId" column="store_menu_tree_id" />
	</resultMap>
	<sql id="storeColumns">
		id,
		serial_number,
		company_id,
		activity_code,
		name,
		is_detail,
		province_id,
		province,
		city_id,
		city,
		county_id,
		county,
		area_id,
		area,
		detail_address,
		discount,
		has_store_menu,
		description,
		category_banner_id,
		create_time,
		update_time,
		platform_id
	</sql>
	
	<sql id="nodeStoreColumns">
		p.id,
		p.serial_number,
		p.company_id,
		p.activity_code,
		p.name,
		p.is_detail,
		p.province_id,
		p.province,
		p.city_id,
		p.city,
		p.county_id,
		p.county,
		p.area_id,
		p.area,
		p.detail_address,
		p.discount,
		p.has_store_menu,
		p.description,
		p.category_banner_id,
		p.create_time,
		p.update_time,
		p.platform_id
	</sql>	

	<select id="findById" parameterType="com.egeo.components.product.po.StorePO" resultMap="storeMap">
		SELECT
		<include refid="storeColumns" />
		FROM store
		WHERE id = #{po.id}
	</select>
	
	<select id="findStoreById" resultMap="storeExtMap">
		SELECT
		s.id,
		s.serial_number,
		s.company_id,
		s.activity_code,
		s.name,
		s.is_detail,
		s.province_id,
		s.province,
		s.city_id,
		s.city,
		s.county_id,
		s.county,
		s.area_id,
		s.area,
		s.detail_address,
		s.discount,
		s.has_store_menu,
		s.description,
		s.category_banner_id,
		s.create_time,
		s.update_time,
		s.platform_id,
		sn.pids,
		smt.id store_menu_tree_id
		FROM store s,store_menu_tree smt,store_tree_node sn
		WHERE  s.id = smt.store_id and s.id = #{po.id} and s.id = sn.store_id
	</select>

	<select id="findOfPage" resultMap="storeMap">
		SELECT
		<include refid="storeColumns" />
		FROM store
		<where>
			<if test="po.serialNumber != null">
				and serial_number = #{po.serialNumber}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.activityCode != null">
				and activity_code = #{po.activityCode}
			</if>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.isDetail != null">
				and is_detail = #{po.isDetail}
			</if>
			<if test="po.provinceId != null">
				and province_id = #{po.provinceId}
			</if>
			<if test="po.province != null">
				and province = #{po.province}
			</if>
			<if test="po.cityId != null">
				and city_id = #{po.cityId}
			</if>
			<if test="po.city != null">
				and city = #{po.city}
			</if>
			<if test="po.countyId != null">
				and county_id = #{po.countyId}
			</if>
			<if test="po.county != null">
				and county = #{po.county}
			</if>
			<if test="po.areaId != null">
				and area_id = #{po.areaId}
			</if>
			<if test="po.area != null">
				and area = #{po.area}
			</if>
			<if test="po.detailAddress != null">
				and detail_address = #{po.detailAddress}
			</if>
			<if test="po.discount != null">
				and discount = #{po.discount}
			</if>
			<if test="po.hasStoreMenu != null">
				and has_store_menu = #{po.hasStoreMenu}
			</if>
			<if test="po.description != null">
				and description = #{po.description}
			</if>
			<if test="po.categoryBannerId != null">
				and category_banner_id = #{po.categoryBannerId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.ids != null and po.ids.size > 0">
				and id in
				<foreach collection="po.ids" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM store
		<where>
			<if test="po.serialNumber != null">
				and serial_number = #{po.serialNumber}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.activityCode != null">
				and activity_code = #{po.activityCode}
			</if>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.isDetail != null">
				and is_detail = #{po.isDetail}
			</if>
			<if test="po.provinceId != null">
				and province_id = #{po.provinceId}
			</if>
			<if test="po.province != null">
				and province = #{po.province}
			</if>
			<if test="po.cityId != null">
				and city_id = #{po.cityId}
			</if>
			<if test="po.city != null">
				and city = #{po.city}
			</if>
			<if test="po.countyId != null">
				and county_id = #{po.countyId}
			</if>
			<if test="po.county != null">
				and county = #{po.county}
			</if>
			<if test="po.areaId != null">
				and area_id = #{po.areaId}
			</if>
			<if test="po.area != null">
				and area = #{po.area}
			</if>
			<if test="po.detailAddress != null">
				and detail_address = #{po.detailAddress}
			</if>
			<if test="po.discount != null">
				and discount = #{po.discount}
			</if>
			<if test="po.hasStoreMenu != null">
				and has_store_menu = #{po.hasStoreMenu}
			</if>
			<if test="po.description != null">
				and description = #{po.description}
			</if>
			<if test="po.categoryBannerId != null">
				and category_banner_id = #{po.categoryBannerId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.ids != null and po.ids.size > 0">
				and id in
				<foreach collection="po.ids" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="storeMap">
		SELECT
		<include refid="storeColumns" />
		FROM store
		<where>
			<if test="po.serialNumber != null">
				and serial_number = #{po.serialNumber}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.activityCode != null">
				and activity_code = #{po.activityCode}
			</if>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.isDetail != null">
				and is_detail = #{po.isDetail}
			</if>
			<if test="po.provinceId != null">
				and province_id = #{po.provinceId}
			</if>
			<if test="po.province != null">
				and province = #{po.province}
			</if>
			<if test="po.cityId != null">
				and city_id = #{po.cityId}
			</if>
			<if test="po.city != null">
				and city = #{po.city}
			</if>
			<if test="po.countyId != null">
				and county_id = #{po.countyId}
			</if>
			<if test="po.county != null">
				and county = #{po.county}
			</if>
			<if test="po.areaId != null">
				and area_id = #{po.areaId}
			</if>
			<if test="po.area != null">
				and area = #{po.area}
			</if>
			<if test="po.detailAddress != null">
				and detail_address = #{po.detailAddress}
			</if>
			<if test="po.discount != null">
				and discount = #{po.discount}
			</if>
			<if test="po.hasStoreMenu != null">
				and has_store_menu = #{po.hasStoreMenu}
			</if>
			<if test="po.description != null">
				and description = #{po.description}
			</if>
			<if test="po.categoryBannerId != null">
				and category_banner_id = #{po.categoryBannerId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.ids != null and po.ids.size > 0">
				and id in
				<foreach collection="po.ids" item="id" open="(" separator=","
						 close=")">
					#{id}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
	<select id="findRootStoreOfPage" resultMap="storeExtMap">
		SELECT
		pd.pids ,
		pd.parent_id ,		
		pd.store_tree_id ,
		pd.id node_id,
		<include refid="nodeStoreColumns" />
		FROM store p LEFT JOIN store_tree_node pd on p.id = pd.store_id 
		where pd.parent_id = 0 and p.platform_id = #{po.platformId}		
			
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY p.id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countRootStoreOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM store p LEFT JOIN store_tree_node pd on p.id = pd.store_id 
		where pd.parent_id = 0 and p.platform_id = #{po.platformId}

	</select>
	
	<select id="findRootStoreAll" resultMap="storeExtMap">
		SELECT
		pd.pids ,
		pd.parent_id ,		
		pd.store_tree_id ,
		pd.id node_id,
		<include refid="nodeStoreColumns" />
		FROM store p LEFT JOIN store_tree_node pd on p.id = pd.store_id 
		where pd.parent_id = 0 and p.platform_id = #{po.platformId}
			
		ORDER BY p.id desc	

	</select>	
	<select id="findStoreAllByTreeId" resultMap="storeExtMap">
		SELECT
		pd.pids ,
		pd.parent_id ,
		pd.store_tree_id ,
		pd.id node_id,
		pd.list_sort,
		<include refid="nodeStoreColumns" />
		FROM store p LEFT JOIN store_tree_node pd on p.id = pd.store_id where pd.store_tree_id = #{storeTreeId}	
		ORDER BY p.id desc	
	</select>		
	
	<select id="findHeadStoreByStoreId" resultMap="storeMap">
		SELECT 
		s.id,
		s.serial_number,
		s.company_id,
		s.activity_code,
		s.name 
		from store s,store_tree_node stn 
		WHERE 
		s.id = stn.store_id 
		and stn.parent_id = 0 
		and stn.store_tree_id = 
		(SELECT stn.store_tree_id from store s,store_tree_node stn 
		WHERE s.id = stn.store_id and s.id = #{storeId})
	</select>
	<select id="findStoreByNodeId" resultMap="storeExtMap">

		SELECT
		pd.pids ,
		pd.parent_id ,		
		pd.store_tree_id ,
		pd.id node_id,
		<include refid="nodeStoreColumns" />
		FROM store p,store_tree_node pd
		WHERE  pd.id = #{nodeId} and p.id = pd.store_id
	</select>

	<select id="findStoreByName" resultType="java.lang.Long">
		SELECT
		s.id
		from store s LEFT JOIN store_tree_node stn
		ON  s.id=stn.store_id
		WHERE
		stn.parent_id=0
		<if test="storeName!=null">
			and s.name LIKE concat('%',#{storeName},'%')
		</if>

	</select>
	
	<select id="findStoreByPlatformIdAndStoreMenu" resultMap="storeMap">
		SELECT
		<include refid="storeColumns" />
		FROM store
		where platform_id = #{po.platformId}
		and has_store_menu = 1
	</select>
	
</mapper>
	