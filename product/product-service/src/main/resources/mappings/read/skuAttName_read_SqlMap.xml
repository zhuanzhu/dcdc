<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.SkuAttNameReadDAO">

	<select id="querySkuAttNamesBySkuId" resultMap="skuAttNameMap">
		select * from sku_att_name
		where sku_id=#{skuId}
	</select>

	<resultMap type="com.egeo.components.product.po.SkuAttNamePO" id="skuAttNameMap">
		<result property="id" column="id" />
		<result property="parentId" column="parent_id" />
		<result property="skuId" column="sku_id" />
		<result property="attNameId" column="att_Name_id" />
		<result property="sortValue" column="sort_value" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
	</resultMap>
	
	<resultMap type="com.egeo.components.product.condition.SkuAttNameCondition" id="skuAttNameCondition" extends="skuAttNameMap">
		<result property="name" column="name" />
		<result property="value" column="value" />
	</resultMap>

	<sql id="skuAttNameColumns">
		id,
		parent_id,
		sku_id,
		att_Name_id,
		sort_value,
		create_time,
		update_time,
		platform_id
	</sql>
	<select id="findLastId" resultType="java.lang.Long">
		SELECT
		MAX(id)
		FROM sku_att_name
	</select>
	<select id="findById" parameterType="com.egeo.components.product.po.SkuAttNamePO" resultMap="skuAttNameMap">
		SELECT
		<include refid="skuAttNameColumns" />
		FROM sku_att_name
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="skuAttNameMap">
		SELECT
		<include refid="skuAttNameColumns" />
		FROM sku_att_name
		<where>
			<if test="po.parentId != null">
				and parent_id = #{po.parentId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.attNameId != null">
				and att_Name_id = #{po.attNameId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM sku_att_name
		<where>
			<if test="po.parentId != null">
				and parent_id = #{po.parentId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.attNameId != null">
				and att_Name_id = #{po.attNameId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="skuAttNameMap">
		SELECT
		<include refid="skuAttNameColumns" />
		FROM sku_att_name
		<where>
			<if test="po.parentId != null">
				and parent_id = #{po.parentId}
			</if>
			<if test="po.skuId != null">
				and sku_id = #{po.skuId}
			</if>
			<if test="po.attNameId != null">
				and att_Name_id = #{po.attNameId}
			</if>
			<if test="po.sortValue != null">
				and sort_value = #{po.sortValue}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY sort_value
			</otherwise>
		</choose>
	</select>
	
	<select id="findSkuAttNameByskuId" resultMap="skuAttNameCondition">
		SELECT
		san.id,
		san.parent_id,
		san.sku_id,
		san.att_Name_id,
		an.`name`,
		av.`value`
		FROM sku_att_name san
		LEFT JOIN attribute_name an on an.id = san.att_Name_id
		LEFT JOIN sku_att_value sav on sav.sku_att_name_id = san.id
		LEFT JOIN attribute_value av on av.id = sav.att_value_id
		WHERE san.sku_id = #{skuId}
	</select>
</mapper>
	