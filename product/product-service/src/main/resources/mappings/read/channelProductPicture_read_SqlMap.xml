<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.ChannelProductPictureReadDAO">

	<resultMap type="com.egeo.components.product.po.ChannelProductPicturePO" id="resultMap">
		<result property="id" column="id" />
		<result property="channelCode" column="channel_code" />
		<result property="productId" column="product_id" />
		<result property="type" column="type" />
		<result property="pictureUrl" column="picture_url" />
		<result property="sortValue" column="sort_value" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="tableColumns">
		id,
		product_id,
		channel_code,
		type,
		picture_url,
		sort_value,
		create_time,
		update_time,
		platform_id
	</sql>


	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.channelCode != null">
				and channel_code = #{po.channelCode}
			</if>
			<if test="po.productId != null">
				and product_id = #{po.productId}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.pictureUrl != null">
				and picture_url = #{po.pictureUrl}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="tableNameId">
		channel_product_picture
	</sql>

<!--		<select id="findByIds" resultMap="channelServiceConfigMap">-->
<!--			select * from channel_service_config-->
<!--			where id -->
<!--			<include refid="inClause" />-->
<!--		</select>-->

	<select id="findById" parameterType="com.egeo.components.product.po.ChannelProductPicturePO" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="resultMap">
		SELECT
			<include refid="tableColumns" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findChannelPicByProductIds" resultMap="resultMap">
		SELECT
			p.*
		FROM
			channel_product_picture p
		WHERE
			p.channel_code = #{channelCode}
			<if test="productIds!=null and productIds.size()>0">
				AND p.product_id IN
				<foreach collection="productIds" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		ORDER BY p.sort_value
	</select>
</mapper>
