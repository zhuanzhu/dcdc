<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.ChannelProductReadDAO">

	<resultMap type="com.egeo.components.product.po.ChannelProductPO" id="resultMap">
		<result property="id" column="id" />
		<result property="channelCode" column="channel_code" />
		<result property="productId" column="product_id" />

		<result property="chineseName" column="chinese_name" />
		<result property="categoryId" column="category_id" />
		<result property="categoryPid" column="category_pid" />
		<result property="categoryFPid" column="category_f_pid" />
		<result property="brandId" column="brand_id" />
		<result property="categoryTreeNodeId" column="category_tree_node_id" />
		<result property="title" column="title" />
		<result property="name" column="name" />
		<result property="goodsType" column="goods_type" />
		<result property="brandName" column="brand_name" />
		<result property="goodsLevel" column="goods_level" />
		<result property="marketPrice" column="market_price" />
		<result property="price" column="price" />
		<result property="taxNo" column="tax_no" />
		<result property="placeOfOrigin" column="place_of_origin" />
		<result property="countryName" column="country_name" />
		<result property="calculationUnit" column="calculation_unit" />
		<result property="unitName" column="unit_name" />
		<result property="status" column="status" />
		<result property="isAvailable" column="is_available" />
		<result property="productDetails" column="product_details" />
		<result property="supplierId" column="supplier_id" />
		<result property="enterpriseId" column="enterprise_id" />
		<result property="commodityTemplateId" column="commodity_template_id" />
		<result property="priceDetail" column="price_detail" />
		<result property="referlink" column="referlink" />
		<result property="extend" column="extend" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="tableColumns">
		id,
		channel_code,
		product_id,
		chinese_name,
		category_id,
		category_pid,
		category_f_pid,
		brand_id,
		category_tree_node_id,
		title,
		name,
		goods_type,
		brand_name,
		goods_level,
		market_price,
		price,
		tax_no,
		ean_no,
		place_of_origin,
		country_name,
		calculation_unit,
		unit_name,
		status,
		is_available,
		product_details,
		create_time,
		update_time,
		supplier_id,
		enterprise_id,
		platform_id,
		commodity_template_id,
		price_detail,
		referlink,
		extend
	</sql>


	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.channelCode != null">
				and channel_code = #{po.channelCode}
			</if>
			<if test="po.productId != null">
				and product_id = #{po.productId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="tableNameId">
		channel_product
	</sql>

<!--		<select id="findByIds" resultMap="channelServiceConfigMap">-->
<!--			select * from channel_service_config-->
<!--			where id -->
<!--			<include refid="inClause" />-->
<!--		</select>-->

	<select id="findById" parameterType="com.egeo.components.product.po.ChannelProductPO" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="resultMap">
		SELECT
			<include refid="tableColumns" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>
</mapper>
