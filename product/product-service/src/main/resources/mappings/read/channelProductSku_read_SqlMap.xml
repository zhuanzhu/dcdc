<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.product.dao.read.ChannelProductSkuReadDAO">

	<resultMap type="com.egeo.components.product.po.ChannelProductSkuPO" id="resultMap">
		<result property="id" column="id" />
		<result property="channelCode" column="channel_code" />
		<result property="productId" column="product_id" />
		<result property="skuSerialNumber" column="sku_serial_number" />
		<result property="merchantId" column="merchant_id" />
		<result property="standardProductUnitId" column="standard_product_unit_id" />
		<result property="skuName" column="sku_name" />
		<result property="skuProductName" column="sku_product_name" />
		<result property="skuMarketPrice" column="sku_market_price" />
		<result property="skuPrice" column="sku_price" />
		<result property="skuCostingPrice" column="sku_costing_price" />
		<result property="remark" column="remark" />
		<result property="isAvailable" column="is_available" />
		<result property="isValid" column="is_valid" />
		<result property="code" column="code" />
		<result property="skuPicUrl" column="sku_pic_url" />
		<result property="synchronizationTime" column="synchronization_time" />
		<result property="externalSkuId" column="external_sku_id" />
		<result property="barCode" column="bar_code" />
		<result property="skuCode" column="sku_code" />
		<result property="platformId" column="platform_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="taxRate" column="tax_rate" />
		<result property="hasRate" column="has_rate" />
		<result property="storeListText" column="store_list_text" />
		<result property="state" column="state" />
	</resultMap>
	<resultMap type="com.egeo.components.product.condition.ChannelProductAndSkuCondition" id="channelProductAndSkuCondition" extends="resultMap">
		<result property="chineseName" column="chinese_name" />
		<result property="brandId" column="brand_id" />
		<result property="title" column="title" />
		<result property="name" column="name" />
		<result property="goodsType" column="goods_type" />
		<result property="brandName" column="brand_name" />
		<result property="goodsLevel" column="goods_level" />
		<result property="marketPrice" column="market_price" />
		<result property="price" column="price" />
		<result property="taxNo" column="tax_no" />
		<result property="eanNo" column="ean_no" />
		<result property="placeOfOrigin" column="place_of_origin" />
		<result property="countryName" column="country_name" />
		<result property="calculationUnit" column="calculation_unit" />
		<result property="unitName" column="unit_name" />
		<result property="status" column="status" />
		<result property="productDetails" column="product_details" />
		<result property="commodityTemplateId" column="commodity_template_id" />
		<result property="priceDetail" column="price_detail" />
	</resultMap>

	<sql id="tableColumns">
		id,
		channel_code,
		product_id,
		sku_serial_number,
		merchant_id,
		standard_product_unit_id,
		sku_name,
		sku_product_name,
		sku_market_price,
		sku_price,
		sku_costing_price,
		remark,
		is_available,
		is_valid,
		code,
		sku_pic_url,
		create_time,
		update_time,
		synchronization_time,
		platform_id,
		external_sku_id,
		bar_code,
		sku_code,
		has_rate,
		tax_rate,
		store_list_text,
		`state`
	</sql>

	<!-- 产品和sku关联查询的列-->
	<sql id="productAndSkuListColumnsSql">
		p.chinese_name,
		p.brand_id,
		p.title,
		p.name,
		p.goods_type,
		p.brand_name,
		p.goods_level,
		p.market_price,
		p.price,
		p.tax_no,
		p.ean_no,
		p.place_of_origin,
		p.country_name,
		p.calculation_unit,
		p.unit_name,
		p.status,
		p.product_details,
		p.commodity_template_id,
		p.price_detail,
		sku.*
	</sql>

	<sql id="whereSql">
		<where>
			<if test="po.id != null">
				and id =  #{po.id}
			</if>
			<if test="po.channelCode != null">
				and channel_code = #{po.channelCode}
			</if>
			<if test="po.productId != null">
				and product_id = #{po.productId}
			</if>
			<if test="po.standardProductUnitId != null">
				and standard_product_unit_id = #{po.standardProductUnitId}
			</if>
			<if test="po.skuSerialNumber != null">
				and sku_serial_number = #{po.skuSerialNumber}
			</if>
			<if test="po.skuCode != null">
				and sku_code = #{po.skuCode}
			</if>
			<if test="po.code != null">
				and code = #{po.code}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</sql>

	<sql id="inClause">
		in
		<foreach collection="ids" item="id" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</sql>

	<sql id="tableNameId">
		channel_product_sku
	</sql>

<!--		<select id="findByIds" resultMap="channelServiceConfigMap">-->
<!--			select * from channel_service_config-->
<!--			where id -->
<!--			<include refid="inClause" />-->
<!--		</select>-->

	<select id="findById" parameterType="com.egeo.components.product.po.ChannelProductSkuPO" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="resultMap">
		SELECT
			<include refid="tableColumns" />
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
			<choose>
				<when test="page !=null and page.orderBy != null and page.orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
					ORDER BY id desc
				</otherwise>
			</choose>
			<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
			</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
			<include refid="tableNameId" />
			<include refid="whereSql"/>
	</select>

	<select id="findAll" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		<include refid="whereSql"/>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>


	<select id="findChannelProductSkuBySkuIds" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		<where>
			<if test="channelCode != null and channelCode !=''">
				and channel_code=#{channelCode}
			</if>
			<if test="skuList != null and skuList.size()>0">
				 and external_sku_id in
				<foreach collection="skuList" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

	<select id="getChannelProductAndSkuList" resultMap="channelProductAndSkuCondition">
		SELECT
			<include refid="productAndSkuListColumnsSql" />
		FROM
			channel_product_sku sku
				INNER JOIN channel_product p ON sku.product_id = p.product_id
				AND sku.channel_code = p.channel_code
		<include refid="productAndSkuPageWhereSql" />
	</select>

	<select id="getChannelProductAndSkuListOfPage" resultMap="channelProductAndSkuCondition">
		SELECT
			<include refid="productAndSkuListColumnsSql" />
		FROM
		channel_product_sku sku
		INNER JOIN channel_product p ON sku.product_id = p.product_id
		AND sku.channel_code = p.channel_code
		<include refid="productAndSkuPageWhereSql" />
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY sku.id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="getChannelProductAndSkuListCountOfPage" resultType="java.lang.Integer">
		SELECT
			count(1) cnt
		FROM
		channel_product_sku sku
		INNER JOIN channel_product p ON sku.product_id = p.product_id
		AND sku.channel_code = p.channel_code
		<include refid="productAndSkuPageWhereSql" />
	</select>
	<!-- 产品和sku关联查询的查询条件-->
	<sql id="productAndSkuPageWhereSql">
		where sku.channel_code = #{dto.channelCode}
		and sku.state =1
		<if test="dto.skuProductName != null and dto.skuProductName !=''">
			and sku.sku_product_name like concat('%',#{dto.skuProductName},'%')
		</if>
		<if test="dto.categoryTreeNodeIdList != null and dto.categoryTreeNodeIdList.size()>0">
			and p.category_id in
			<foreach collection="dto.categoryTreeNodeIdList" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="dto.brandIds != null and dto.brandIds.size()>0">
			and p.brand_id in
			<foreach collection="dto.brandIds" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

		<if test="dto.cat2 != null and dto.cat2.size()>0">
			and p.category_pid in
			<foreach collection="dto.cat2" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

		<if test="dto.cat3 != null and dto.cat3.size()>0">
			and p.category_f_pid in
			<foreach collection="dto.cat3" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</sql>


	<select id="findChannelProductSkuBySkuCodes" resultMap="resultMap">
		SELECT
		<include refid="tableColumns" />
		FROM
		<include refid="tableNameId" />
		<where>
			<if test="channelCode != null and channelCode !=''">
				and channel_code=#{channelCode}
			</if>
			<if test="skuList != null and skuList.size()>0">
				and sku_code in
				<foreach collection="skuList" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

</mapper>
