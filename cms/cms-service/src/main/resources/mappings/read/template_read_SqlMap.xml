<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.cms.dao.read.TemplateReadDAO">

	<select id="queryInUseTemplateByClientType" resultMap="templateMap">
		select * from template
		where client_type=#{clientType}
		and status=0
		and type=#{type}
		and company_type=#{companyType}
		and platform_id = #{platformId}
	</select>

	<select id="queryTemplatePageTotalSize" resultType="java.lang.Integer">
		select count(0) 
		<include refid="queryTemplatePage_MainCond" />
	</select>

	<select id="queryTemplatePage" resultMap="templateMap">
		select * 
		<include refid="queryTemplatePage_MainCond" />
		order by status, create_time desc
		limit #{page.limitStart},#{page.pageSize}
	</select>
	
	<sql id="queryTemplatePage_MainCond">
		from template
		<where>
			type=#{type}
			<if test="name!=null">
				and name like concat('%',#{name},'%')
			</if>
			<if test="status!=null">
				and status=#{status}
			</if>
			<if test="clientType!=null">
				and client_type = #{clientType}
			</if>
			<if test="companyType != null">
				and company_type = #{companyType}
			</if>
			<if test="platformId != null">
				and platform_id = #{platformId}
			</if>
		</where>
	</sql>

	<resultMap type="com.egeo.components.cms.po.TemplatePO" id="templateMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="clientType" column="client_type" />
		<result property="clientVersionA" column="client_version_a" />
		<result property="clientVersionI" column="client_version_i" />
		<result property="remark" column="remark" />
		<result property="type" column="type" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="showFgj" column="show_fgj" />
		<result property="companyType" column="company_type" />
		<result property="platformId" column="platform_id" />
	</resultMap>

	<sql id="templateColumns">
		id,
		name,
		status,
		client_type,
		client_version_a,
		client_version_i,
		remark,
		type,
		create_time,
		update_time,
		show_fgj,
		company_type,
		platform_id
	</sql>

	<select id="findById" parameterType="com.egeo.components.cms.po.TemplatePO" resultMap="templateMap">
		SELECT
		<include refid="templateColumns" />
		FROM template
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="templateMap">
		SELECT
		<include refid="templateColumns" />
		FROM template
		<where>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.clientVersionA != null">
				and client_version_a = #{po.clientVersionA}
			</if>
			<if test="po.clientVersionI != null">
				and client_version_i = #{po.clientVersionI}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.showFgj != null">
				and show_fgj = #{po.showFgj}
			</if>
			<if test="po.companyType != null">
				and company_type = #{po.companyType}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>		
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM template
		<where>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.clientVersionA != null">
				and client_version_a = #{po.clientVersionA}
			</if>
			<if test="po.clientVersionI != null">
				and client_version_i = #{po.clientVersionI}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.showFgj != null">
				and show_fgj = #{po.showFgj}
			</if>
			<if test="po.companyType != null">
				and company_type = #{po.companyType}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
	</select>
	
	<select id="findAll" resultMap="templateMap">
		SELECT
		<include refid="templateColumns" />
		FROM template
		<where>
			<if test="po.name != null">
				and name = #{po.name}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.clientType != null">
				and client_type = #{po.clientType}
			</if>
			<if test="po.clientVersionA != null">
				and client_version_a = #{po.clientVersionA}
			</if>
			<if test="po.clientVersionI != null">
				and client_version_i = #{po.clientVersionI}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.type != null">
				and type = #{po.type}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.showFgj != null">
				and show_fgj = #{po.showFgj}
			</if>
			<if test="po.companyType != null">
				and company_type = #{po.companyType}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>			
			<otherwise>
				ORDER BY id desc		
			</otherwise>
		</choose>
	</select>
</mapper>
	