<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egeo.components.finance.dao.read.SoJdReadDAO">


	<!--<select id="queryBackStageSoPageTotalSize"
			resultType="java.lang.Integer">
		select count(0)
		from so
		<where>
			<if test="orderCode!=null">
				and order_code like concat('%',#{orderCode},'%')
			</if>
			<if test="userIds!=null">
				and user_id in(
				<foreach collection="userIds" item="uid" separator=",">
					#{uid}
				</foreach>
				)
			</if>
			<if test="puIds!=null and puIds.size > 0">
				and id in (select distinct(so_id) from so_item where pu_id in (
				<foreach collection="puIds" item="puid" separator=",">
					#{puid}
				</foreach>
				))
			</if>

			<if test="storeId==null">
				and store_id != 1
			</if>

			<if test="startDateTime!=null">
				and create_time>=#{startDateTime}
			</if>
			<if test="endDateTime!=null">
				and #{endDateTime}  >= create_time
			</if>
			<if test="status!=null">
				and order_status=#{status}
			</if>
			<if test="confirmStatus!=null">
				and order_confirm_status=#{confirmStatus}
			</if>
			<if test="payStatus!=null">
				and order_pay_status=#{payStatus}
			</if>
			<if test="paymentType!=null">
				and cash_pay_type=#{paymentType}
			</if>
			<if test="!showTest">
				<if test="testCompanyIds!=null">
					and company_id not in
					<foreach collection="testCompanyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
				</if>
			</if>
			<if test="platformId!=null">
				and platform_id=#{platformId}
			</if>
			<if test="refundFlag">
				and (refund_cash &gt; 0 or refund_fubi &gt; 0)
			</if>
		</where>
	</select>

	<select id="queryBackStageSoPage" resultMap="soMap">
		select *
		from so
		<where>
			<if test="orderCode!=null">
				and order_code like concat('%',#{orderCode},'%')
			</if>
			<if test="userIds!=null">
				and user_id in(
				<foreach collection="userIds" item="uid" separator=",">
					#{uid}
				</foreach>
				)
			</if>
			<if test="puIds!=null and puIds.size > 0">
				and id in (select distinct(so_id) from so_item where pu_id in (
				<foreach collection="puIds" item="puid" separator=",">
					#{puid}
				</foreach>
				))
			</if>

			<if test="storeId==null">
				and store_id != 1
			</if>

			<if test="startDateTime!=null">
				and create_time>=#{startDateTime}
			</if>
			<if test="endDateTime!=null">
				and #{endDateTime}  >= create_time
			</if>
			<if test="status!=null">
				and order_status=#{status}
			</if>
			<if test="confirmStatus!=null">
				and order_confirm_status=#{confirmStatus}
			</if>
			<if test="payStatus!=null">
				and order_pay_status=#{payStatus}
			</if>
			<if test="paymentType!=null">
				and cash_pay_type=#{paymentType}
			</if>
			<if test="!showTest">
				<if test="testCompanyIds!=null">
					and company_id not in
					<foreach collection="testCompanyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
				</if>
			</if>
			<if test="platformId!=null">
				and platform_id=#{platformId}
			</if>
			<if test="refundFlag">
				and (refund_cash &gt; 0 or refund_fubi &gt; 0)
			</if>
		</where>
		order by id desc
		limit #{page.limitStart},#{page.pageSize}
	</select>-->

	<select id="queryBackStageSoPageTotalSize"
		resultType="java.lang.Integer">
		select count(1)
		from so_jd  so
		<where>

			<if test="orderCode!=null">
				and so.order_code like concat('%',#{orderCode},'%')
			</if>
			<if test="userIds!=null">
				and so.user_id in(
				<foreach collection="userIds" item="uid" separator=",">
					#{uid}
				</foreach>
				)
			</if>
			<if test="puIds!=null and puIds.size > 0">
				and so.id in (select distinct(so_id) from so_item where pu_id in (
				<foreach collection="puIds" item="puid" separator=",">
					#{puid}
				</foreach>
				))
			</if>

			<if test="storeId!=null">
				and so.store_id=#{storeId}
			</if>

			<if test="startDateTime!=null">
				and so.create_time>=#{startDateTime}
			</if>
			<if test="endDateTime!=null">
				and #{endDateTime}  >= so.create_time
			</if>
			<if test="status!=null">
				and so.order_status=#{status}
			</if>
			<if test="confirmStatus!=null">
				and so.order_confirm_status=#{confirmStatus}
			</if>
			<if test="payStatus!=null">
				and so.order_pay_status=#{payStatus}
			</if>
			<if test="paymentType!=null">
				and so.cash_pay_type=#{paymentType}
			</if>
			<if test="!showTest">
				<if test="testCompanyIds!=null">
					and so.company_id not in
					<foreach collection="testCompanyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
				</if>
			</if>
			<if test="companyIds!=null">
					and so.company_id in
					<foreach collection="companyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
			</if>
			<if test="platformId!=null">
				and so.platform_id=#{platformId}
			</if>
			<if test="refundFlag">
				and (so.refund_cash &gt; 0 or so.refund_fubi &gt; 0)
			</if>
		</where>
	</select>

	<select id="queryBackStageSoPage" resultMap="soMap">
		select so.*
		from so_jd  so
		<where>
			<if test="orderCode!=null">
				and so.order_code like concat('%',#{orderCode},'%')
			</if>
			<if test="userIds!=null">
				and so.user_id in(
				<foreach collection="userIds" item="uid" separator=",">
					#{uid}
				</foreach>
				)
			</if>
			<if test="puIds!=null and puIds.size > 0">
				and so.id in (select distinct(so_id) from so_item where pu_id in (
				<foreach collection="puIds" item="puid" separator=",">
					#{puid}
				</foreach>
				))
			</if>

			<if test="storeId!=null">
				and so.store_id=#{storeId}
			</if>

			<if test="startDateTime!=null">
				and so.create_time>=#{startDateTime}
			</if>
			<if test="endDateTime!=null">
				and #{endDateTime}  >= so.create_time
			</if>
			<if test="status!=null">
				and so.order_status=#{status}
			</if>
			<if test="confirmStatus!=null">
				and so.order_confirm_status=#{confirmStatus}
			</if>
			<if test="payStatus!=null">
				and so.order_pay_status=#{payStatus}
			</if>
			<if test="paymentType!=null">
				and so.cash_pay_type=#{paymentType}
			</if>
			<if test="!showTest">
				<if test="testCompanyIds!=null">
					and so.company_id not in
					<foreach collection="testCompanyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
				</if>
			</if>
			<if test="companyIds!=null">
					and so.company_id in
					<foreach collection="companyIds" item="companyId" open="(" close=")" separator=",">
						#{companyId}
					</foreach>
			</if>
			<if test="platformId!=null">
				and so.platform_id=#{platformId}
			</if>
			<if test="refundFlag">
				and (so.refund_cash &gt; 0 or so.refund_fubi &gt; 0)
			</if>
		</where>
		order by id desc
		limit #{page.limitStart},#{page.pageSize}
	</select>



	<select id="querySoByOrderCode" resultMap="soMap">
		select * from so_jd
		where
		order_code=#{orderCode}
		and type =1
	</select>

	<select id="querySoByRefundOrderCode" resultMap="soMap">
		select * from so_jd
		where
		order_code=#{orderCode}
		and type =2
	</select>

	<select id="queryUndeleteSoByOrderCode" resultMap="soMap">
		select * from
		so_jd where order_code=#{orderCode}
		and order_delete_status=0
	</select>

	<select id="findSoSum" resultType="java.lang.Long">
		select count(1)
		from so_jd
		<where>
			<if test="soPO.orderConfirmStatus != null">
				and order_confirm_status = #{soPO.orderConfirmStatus}
			</if>
			<if test="soPO.userId != null">
				and user_id = #{soPO.userId}
			</if>
			<if test="soPO.orderPayStatus != null">
				and order_pay_status = #{soPO.orderPayStatus}
			</if>

			<choose>
				<when test="soPO.deliveryStatus != null">
					and delivery_status in (10,20)
				</when>
				<otherwise>
					and delivery_status = 0
				</otherwise>
			</choose>
			<if test="soPO.platformId != null">
				and platform_id = #{soPO.platformId}
			</if>
			<if test="soPO.storeId != null">
				and store_id = #{soPO.storeId}
			</if>
			<if test="soPO.saleWay == -1">
				and sale_way != 5
			</if>

		</where>

	</select>



	<resultMap type="com.egeo.components.finance.po.SoJdPO" id="soMap">
		<result property="id" column="id" />
		<result property="orderCode" column="order_code" />
		<result property="userId" column="user_id" />
		<result property="orderAmount" column="order_amount" />
		<result property="orderAmountPay" column="order_amount_pay" />
		<result property="productAmount" column="product_amount" />
		<result property="orderStatus" column="order_status" />
		<result property="orderConfirmStatus"
			column="order_confirm_status" />
		<result property="orderPayStatus" column="order_pay_status" />
		<result property="orderAutoCompleteDate"
			column="order_auto_complete_date" />
		<result property="orderPaymentConfirmDate"
			column="order_payment_confirm_date" />
		<result property="orderPaymentConfirmType"
			column="order_payment_confirm_type" />
		<result property="orderDeliveryFee" column="order_delivery_fee" />
		<result property="orderDeliveryFeeInsuranceType"
			column="order_delivery_fee_insurance_type" />
		<result property="orderDeliveryFeeInsuranceAmount"
			column="order_delivery_fee_insurance_amount" />
		<result property="cashPayType" column="cash_pay_type" />
		<result property="orderPaidByCash" column="order_paid_by_cash" />
		<result property="couponDiscount"
			column="coupon_discount" />
		<result property="orderPaidByCard" column="order_paid_by_card" />
		<result property="orderPaidByRebate"
			column="order_paid_by_rebate" />
		<result property="orderPaidByFubi" column="order_paid_by_fubi" />
		<result property="useFubi" column="use_fubi" />
		<result property="orderPromotionDiscount"
			column="order_promotion_discount" />
		<result property="orderGivePoints" column="order_give_points" />
		<result property="deliveryFee"
			column="delivery_fee" />
		<result property="cancelReason" column="cancel_reason" />
		<result property="orderCancelDate" column="order_cancel_date" />
		<result property="orderCanceOperateType"
			column="order_cance_operate_type" />
		<result property="orderChannel" column="order_channel" />
		<result property="invoiceId" column="invoice_id" />
		<result property="orderDeleteStatus"
			column="order_delete_status" />
		<result property="paidOnlineThreshold"
			column="paid_online_threshold" />
		<result property="receiverAddressId"
			column="receiver_address_id" />
		<result property="modifiedAddress" column="modified_address" />
		<result property="modifyAddressTime"
			column="modify_address_time" />
		<result property="incrementTaxAmount"
			column="increment_tax_amount" />
		<result property="customsDutiesAmount"
			column="customs_duties_amount" />
		<result property="deliveryEndtime" column="delivery_endtime" />
		<result property="deliveryStatus" column="delivery_status" />
		<result property="lastOperatorId" column="last_operator_id" />
		<result property="refundTime" column="refund_time" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="refundCash" column="refund_cash" />
		<result property="refundFubi" column="refund_fubi" />
		<result property="companyId" column="company_id" />
		<result property="signPlatform" column="sign_platform" />
		<result property="saleWay" column="sale_way" />
		<result property="storeId" column="store_id" />
		<result property="couponUnitId" column="coupon_unit_id" />
		<result property="storeDiscount" column="store_discount" />
		<result property="deliveryFeeDiscount" column="delivery_fee_discount" />
		<result property="limitCashPayAmount" column="limit_cash_pay_amount" />
		<result property="limitFuBiPayAmount" column="limit_fubi_pay_amount" />
		<result property="soItems" column="so_items" />
		<result property="ledgerPlateform" column="ledger_plateform" />
		<result property="ledgerEnterprise" column="ledger_enterprise" />
		<result property="month" column="month" />
		<result property="type" column="type" />
	</resultMap>

	<sql id="soColumns">
		id,
		order_code,
		user_id,
		order_amount,
		order_amount_pay,
		product_amount,
		order_status,
		order_confirm_status,
		order_pay_status,
		order_auto_complete_date,
		order_payment_confirm_date,
		order_payment_confirm_type,
		order_delivery_fee,
		order_delivery_fee_insurance_type,
		order_delivery_fee_insurance_amount,
		cash_pay_type,
		order_paid_by_cash,
		coupon_discount,
		order_paid_by_card,
		order_paid_by_rebate,
		order_paid_by_fubi,
		use_fubi,
		order_promotion_discount,
		order_give_points,
		delivery_fee,
		cancel_reason,
		order_cancel_date,
		order_cance_operate_type,
		order_channel,
		invoice_id,
		order_delete_status,
		paid_online_threshold,
		receiver_address_id,
		modified_address,
		modify_address_time,
		increment_tax_amount,
		customs_duties_amount,
		delivery_endtime,
		delivery_status,
		last_operator_id,
		refund_time,
		remark,
		create_time,
		update_time,
		platform_id,
		refund_cash,
		refund_fubi,
		company_id,
		sign_platform,
		sale_way,
		store_id,
		coupon_unit_id,
		store_discount,
		delivery_fee_discount,
		limit_cash_pay_amount,
		limit_fubi_pay_amount,
		so_items,
		ledger_plateform,
		ledger_enterprise,
		month,
		type
	</sql>

	<select id="findById"
		parameterType="com.egeo.components.finance.po.SoJdPO" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		<where>
			<if test="po.orderCode != null">
				and order_code = #{po.orderCode}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.orderAmount != null">
				and order_amount = #{po.orderAmount}
			</if>
			<if test="po.orderAmountPay != null">
				and order_amount_pay = #{po.orderAmountPay}
			</if>
			<if test="po.productAmount != null">
				and product_amount = #{po.productAmount}
			</if>
			<if test="po.orderStatus != null">
				and order_status = #{po.orderStatus}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
			<if test="po.orderPayStatus != null">
				and order_pay_status = #{po.orderPayStatus}
			</if>
			<if test="po.orderPaymentConfirmDate != null">
				and order_payment_confirm_date =
				#{po.orderPaymentConfirmDate}
			</if>
			<if test="po.orderPaymentConfirmType != null">
				and order_payment_confirm_type =
				#{po.orderPaymentConfirmType}
			</if>
			<if test="po.orderDeliveryFee != null">
				and order_delivery_fee = #{po.orderDeliveryFee}
			</if>
			<if test="po.orderDeliveryFeeInsuranceType != null">
				and order_delivery_fee_insurance_type =
				#{po.orderDeliveryFeeInsuranceType}
			</if>
			<if test="po.orderDeliveryFeeInsuranceAmount != null">
				and order_delivery_fee_insurance_amount =
				#{po.orderDeliveryFeeInsuranceAmount}
			</if>
			<if test="po.cashPayType != null">
				and cash_pay_type = #{po.cashPayType}
			</if>
			<if test="po.orderPaidByCash != null">
				and order_paid_by_cash = #{po.orderPaidByCash}
			</if>
			<if test="po.couponDiscount != null">
				and coupon_discount = #{po.couponDiscount}
			</if>
			<if test="po.orderPaidByCard != null">
				and order_paid_by_card = #{po.orderPaidByCard}
			</if>
			<if test="po.orderPaidByRebate != null">
				and order_paid_by_rebate = #{po.orderPaidByRebate}
			</if>
			<if test="po.orderPaidByFubi != null">
				and order_paid_by_fubi = #{po.orderPaidByFubi}
			</if>
			<if test="po.useFubi != null">
				and use_fubi = #{po.useFubi}
			</if>
			<if test="po.orderPromotionDiscount != null">
				and order_promotion_discount =
				#{po.orderPromotionDiscount}
			</if>
			<if test="po.orderGivePoints != null">
				and order_give_points = #{po.orderGivePoints}
			</if>
			<if test="po.deliveryFee != null">
				and delivery_fee =
				#{po.deliveryFee}
			</if>
			<if test="po.cancelReason != null">
				and cancel_reason = #{po.cancelReason}
			</if>
			<if test="po.orderCancelDate != null">
				and order_cancel_date = #{po.orderCancelDate}
			</if>
			<if test="po.orderCanceOperateType != null">
				and order_cance_operate_type =
				#{po.orderCanceOperateType}
			</if>
			<if test="po.orderChannel != null">
				and order_channel = #{po.orderChannel}
			</if>
			<if test="po.invoiceId != null">
				and invoice_id = #{po.invoiceId}
			</if>
			<if test="po.orderDeleteStatus != null">
				and order_delete_status = #{po.orderDeleteStatus}
			</if>
			<if test="po.paidOnlineThreshold != null">
				and paid_online_threshold = #{po.paidOnlineThreshold}
			</if>
			<if test="po.receiverAddressId != null">
				and receiver_address_id = #{po.receiverAddressId}
			</if>
			<if test="po.modifiedAddress != null">
				and modified_address = #{po.modifiedAddress}
			</if>
			<if test="po.modifyAddressTime != null">
				and modify_address_time = #{po.modifyAddressTime}
			</if>
			<if test="po.incrementTaxAmount != null">
				and increment_tax_amount = #{po.incrementTaxAmount}
			</if>
			<if test="po.customsDutiesAmount != null">
				and customs_duties_amount = #{po.customsDutiesAmount}
			</if>
			<if test="po.deliveryEndtime != null">
				and delivery_endtime = #{po.deliveryEndtime}
			</if>
			<if test="po.deliveryStatus != null">
				and delivery_status = #{po.deliveryStatus}
			</if>
			<if test="po.lastOperatorId != null">
				and last_operator_id = #{po.lastOperatorId}
			</if>
			<if test="po.refundTime != null">
				and refund_time = #{po.refundTime}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.refundCash != null">
				and refund_cash = #{po.refundCash}
			</if>
			<if test="po.refundFubi != null">
				and refund_fubi = #{po.refundFubi}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.signPlatform != null">
				and sign_platform = #{po.signPlatform}
			</if>
			<if test="po.storeId != null">
				and store_id  = #{po.storeId}
			</if>
			<if test="po.saleWay ==-1">
				and sale_way != 5
			</if>


		</where>
		<choose>
			<when
				test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM so_jd
		<where>
			<if test="po.orderCode != null">
				and order_code = #{po.orderCode}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.orderAmount != null">
				and order_amount = #{po.orderAmount}
			</if>
			<if test="po.orderAmountPay != null">
				and order_amount_pay = #{po.orderAmountPay}
			</if>
			<if test="po.productAmount != null">
				and product_amount = #{po.productAmount}
			</if>
			<if test="po.orderStatus != null">
				and order_status = #{po.orderStatus}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
			<if test="po.orderPayStatus != null">
				and order_pay_status = #{po.orderPayStatus}
			</if>
			<if test="po.orderPaymentConfirmDate != null">
				and order_payment_confirm_date =
				#{po.orderPaymentConfirmDate}
			</if>
			<if test="po.orderPaymentConfirmType != null">
				and order_payment_confirm_type =
				#{po.orderPaymentConfirmType}
			</if>
			<if test="po.orderDeliveryFee != null">
				and order_delivery_fee = #{po.orderDeliveryFee}
			</if>
			<if test="po.orderDeliveryFeeInsuranceType != null">
				and order_delivery_fee_insurance_type =
				#{po.orderDeliveryFeeInsuranceType}
			</if>
			<if test="po.orderDeliveryFeeInsuranceAmount != null">
				and order_delivery_fee_insurance_amount =
				#{po.orderDeliveryFeeInsuranceAmount}
			</if>
			<if test="po.cashPayType != null">
				and cash_pay_type = #{po.cashPayType}
			</if>
			<if test="po.orderPaidByCash != null">
				and order_paid_by_cash = #{po.orderPaidByCash}
			</if>
			<if test="po.couponDiscount != null">
				and coupon_discount = #{po.couponDiscount}
			</if>
			<if test="po.orderPaidByCard != null">
				and order_paid_by_card = #{po.orderPaidByCard}
			</if>
			<if test="po.orderPaidByRebate != null">
				and order_paid_by_rebate = #{po.orderPaidByRebate}
			</if>
			<if test="po.orderPaidByFubi != null">
				and order_paid_by_fubi = #{po.orderPaidByFubi}
			</if>
			<if test="po.useFubi != null">
				and use_fubi = #{po.useFubi}
			</if>
			<if test="po.orderPromotionDiscount != null">
				and order_promotion_discount =
				#{po.orderPromotionDiscount}
			</if>
			<if test="po.orderGivePoints != null">
				and order_give_points = #{po.orderGivePoints}
			</if>
			<if test="po.deliveryFee != null">
				and delivery_fee =
				#{po.deliveryFee}
			</if>
			<if test="po.cancelReason != null">
				and cancel_reason = #{po.cancelReason}
			</if>
			<if test="po.orderCancelDate != null">
				and order_cancel_date = #{po.orderCancelDate}
			</if>
			<if test="po.orderCanceOperateType != null">
				and order_cance_operate_type =
				#{po.orderCanceOperateType}
			</if>
			<if test="po.orderChannel != null">
				and order_channel = #{po.orderChannel}
			</if>
			<if test="po.invoiceId != null">
				and invoice_id = #{po.invoiceId}
			</if>
			<if test="po.orderDeleteStatus != null">
				and order_delete_status = #{po.orderDeleteStatus}
			</if>
			<if test="po.paidOnlineThreshold != null">
				and paid_online_threshold = #{po.paidOnlineThreshold}
			</if>
			<if test="po.receiverAddressId != null">
				and receiver_address_id = #{po.receiverAddressId}
			</if>
			<if test="po.modifiedAddress != null">
				and modified_address = #{po.modifiedAddress}
			</if>
			<if test="po.modifyAddressTime != null">
				and modify_address_time = #{po.modifyAddressTime}
			</if>
			<if test="po.incrementTaxAmount != null">
				and increment_tax_amount = #{po.incrementTaxAmount}
			</if>
			<if test="po.customsDutiesAmount != null">
				and customs_duties_amount = #{po.customsDutiesAmount}
			</if>
			<if test="po.deliveryEndtime != null">
				and delivery_endtime = #{po.deliveryEndtime}
			</if>
			<if test="po.deliveryStatus != null">
				and delivery_status = #{po.deliveryStatus}
			</if>
			<if test="po.lastOperatorId != null">
				and last_operator_id = #{po.lastOperatorId}
			</if>
			<if test="po.refundTime != null">
				and refund_time = #{po.refundTime}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.refundCash != null">
				and refund_cash = #{po.refundCash}
			</if>
			<if test="po.refundFubi != null">
				and refund_fubi = #{po.refundFubi}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.signPlatform != null">
				and sign_platform = #{po.signPlatform}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
			<if test="po.saleWay == -1">
				and sale_way != 5
			</if>

		</where>
	</select>

	<select id="findAll" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		<where>
			<if test="po.orderCode != null">
				and order_code = #{po.orderCode}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.orderAmount != null">
				and order_amount = #{po.orderAmount}
			</if>
			<if test="po.orderAmountPay != null">
				and order_amount_pay = #{po.orderAmountPay}
			</if>
			<if test="po.productAmount != null">
				and product_amount = #{po.productAmount}
			</if>
			<if test="po.orderStatus != null">
				and order_status = #{po.orderStatus}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
			<if test="po.orderPayStatus != null">
				and order_pay_status = #{po.orderPayStatus}
			</if>
			<if test="po.orderPaymentConfirmDate != null">
				and order_payment_confirm_date =
				#{po.orderPaymentConfirmDate}
			</if>
			<if test="po.orderPaymentConfirmType != null">
				and order_payment_confirm_type =
				#{po.orderPaymentConfirmType}
			</if>
			<if test="po.orderDeliveryFee != null">
				and order_delivery_fee = #{po.orderDeliveryFee}
			</if>
			<if test="po.orderDeliveryFeeInsuranceType != null">
				and order_delivery_fee_insurance_type =
				#{po.orderDeliveryFeeInsuranceType}
			</if>
			<if test="po.orderDeliveryFeeInsuranceAmount != null">
				and order_delivery_fee_insurance_amount =
				#{po.orderDeliveryFeeInsuranceAmount}
			</if>
			<if test="po.cashPayType != null">
				and cash_pay_type = #{po.cashPayType}
			</if>
			<if test="po.orderPaidByCash != null">
				and order_paid_by_cash = #{po.orderPaidByCash}
			</if>
			<if test="po.couponDiscount != null">
				and coupon_discount = #{po.couponDiscount}
			</if>
			<if test="po.orderPaidByCard != null">
				and order_paid_by_card = #{po.orderPaidByCard}
			</if>
			<if test="po.orderPaidByRebate != null">
				and order_paid_by_rebate = #{po.orderPaidByRebate}
			</if>
			<if test="po.orderPaidByFubi != null">
				and order_paid_by_fubi = #{po.orderPaidByFubi}
			</if>
			<if test="po.useFubi != null">
				and use_fubi = #{po.useFubi}
			</if>
			<if test="po.orderPromotionDiscount != null">
				and order_promotion_discount =
				#{po.orderPromotionDiscount}
			</if>
			<if test="po.orderGivePoints != null">
				and order_give_points = #{po.orderGivePoints}
			</if>
			<if test="po.deliveryFee != null">
				and delivery_fee =
				#{po.deliveryFee}
			</if>
			<if test="po.cancelReason != null">
				and cancel_reason = #{po.cancelReason}
			</if>
			<if test="po.orderCancelDate != null">
				and order_cancel_date = #{po.orderCancelDate}
			</if>
			<if test="po.orderCanceOperateType != null">
				and order_cance_operate_type =
				#{po.orderCanceOperateType}
			</if>
			<if test="po.orderChannel != null">
				and order_channel = #{po.orderChannel}
			</if>
			<if test="po.invoiceId != null">
				and invoice_id = #{po.invoiceId}
			</if>
			<if test="po.orderDeleteStatus != null">
				and order_delete_status = #{po.orderDeleteStatus}
			</if>
			<if test="po.paidOnlineThreshold != null">
				and paid_online_threshold = #{po.paidOnlineThreshold}
			</if>
			<if test="po.receiverAddressId != null">
				and receiver_address_id = #{po.receiverAddressId}
			</if>
			<if test="po.modifiedAddress != null">
				and modified_address = #{po.modifiedAddress}
			</if>
			<if test="po.modifyAddressTime != null">
				and modify_address_time = #{po.modifyAddressTime}
			</if>
			<if test="po.incrementTaxAmount != null">
				and increment_tax_amount = #{po.incrementTaxAmount}
			</if>
			<if test="po.customsDutiesAmount != null">
				and customs_duties_amount = #{po.customsDutiesAmount}
			</if>
			<if test="po.deliveryEndtime != null">
				and delivery_endtime = #{po.deliveryEndtime}
			</if>
			<if test="po.deliveryStatus != null">
				and delivery_status = #{po.deliveryStatus}
			</if>
			<if test="po.lastOperatorId != null">
				and last_operator_id = #{po.lastOperatorId}
			</if>
			<if test="po.refundTime != null">
				and refund_time = #{po.refundTime}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.refundCash != null">
				and refund_cash = #{po.refundCash}
			</if>
			<if test="po.refundFubi != null">
				and refund_fubi = #{po.refundFubi}
			</if>
			<if test="po.companyId != null">
				and company_id = #{po.companyId}
			</if>
			<if test="po.signPlatform != null">
				and sign_platform = #{po.signPlatform}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
		</where>
		<choose>
			<when
				test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>

	<select id="findByOrderStatusNoOrderAutoCompleteDate"
		resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		WHERE (order_status = 2 OR order_status = 3) and order_auto_complete_date
		is null
	</select>

	<select id="findByOrderAutoCompleteDateNoNull" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		WHERE order_auto_complete_date is not null and order_status != 4
	</select>

	<select id="findAllunpayOrders" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		<where>
			CURRENT_TIMESTAMP - INTERVAL 30 MINUTE >= create_time
			<if test="po.orderStatus != null">
				and order_status = #{po.orderStatus}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
		</where>
	</select>

	<select id="findOrderOfPage" resultMap="soMap">
		SELECT
		<include refid="soColumns" />
		FROM so_jd
		<where>
			<if test="po.orderCode != null">
				and order_code = #{po.orderCode}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
			<if test="po.orderPayStatus != null">
				and order_pay_status = #{po.orderPayStatus}
			</if>
			<if test="cashPayType != null">
				and cash_pay_type = #{cashPayType}
			</if>
			<if test="useFubi != null">
				and use_fubi = #{useFubi}
			</if>
			<if test="startDateTime != null">
				and create_time >= #{startDateTime}
			</if>
			<if test="endDateTime != null">
				and #{endDateTime} >= create_time
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
		</where>
		<choose>
			<when
				test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY create_time desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOrderOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM so_jd
		<where>
			<if test="po.orderCode != null">
				and order_code = #{po.orderCode}
			</if>
			<if test="po.userId != null">
				and user_id = #{po.userId}
			</if>
			<if test="po.orderConfirmStatus != null">
				and order_confirm_status = #{po.orderConfirmStatus}
			</if>
			<if test="po.orderPayStatus != null">
				and order_pay_status = #{po.orderPayStatus}
			</if>
			<if test="cashPayType != null">
				and cash_pay_type = #{cashPayType}
			</if>
			<if test="useFubi != null">
				and use_fubi = #{useFubi}
			</if>
			<if test="startDateTime != null">
				and create_time >= #{startDateTime}
			</if>
			<if test="endDateTime != null">
				and #{endDateTime} >= create_time
			</if>
			<if test="po.platformId != null">
				and platform_id = #{po.platformId}
			</if>
			<if test="po.storeId != null">
				and store_id = #{po.storeId}
			</if>
		</where>
	</select>
	
	<select id="querySoCountByUserAndStatus" resultType="java.lang.Integer">
		select
			count(1) cnt
			from so_jd
		where
			user_id = #{userId}
			and order_status = #{orderStatus}
			and platform_id = #{platformId}
			and order_delete_status = #{orderDeleteStatus}
	</select>
	
	<select id="findCurrentMonthOrder" resultType="java.lang.Integer">
		SELECT 
		count(1) cnt 
		from so_jd 
		WHERE 
		DATE_FORMAT(create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m') 
		and (order_confirm_status = 1 or order_confirm_status = 3)
		and store_id = #{storeId} 
		and platform_id = #{platformId}
	</select>
	
	<select id="findMonthOrder" resultMap="soMap">
		SELECT 
		*
		from  so_jd 		WHERE 
		DATE_FORMAT(create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m') 
		and (order_confirm_status = 1 or order_confirm_status = 3)
	</select>
	
	<select id="findCurrentDayOrder" resultType="java.lang.Integer">
		SELECT 
		count(1) cnt 
		from so_jd 
		WHERE 
		DATE_FORMAT(create_time,'%Y-%m-%d')=DATE_FORMAT(#{date},'%Y-%m-%d') 
		and (order_confirm_status = 1 or order_confirm_status = 3)
		and store_id = #{storeId} 
		and platform_id = #{platformId}
	</select>
	
	<select id="findNoSignOrderSumByStatus" resultType="java.lang.Integer">
		SELECT 
		count(1) cnt 
		from so_jd 
		<where>
			<if test="orderConfirmStatus != null">
				and order_confirm_status = #{orderConfirmStatus}
			</if>
			<if test="orderPayStatus != null">
				and order_pay_status = #{orderPayStatus}
			</if>
			<if test="storeId != null">
				and store_id = #{storeId} 
			</if>
			<if test="platformId != null">
				and platform_id = #{platformId}
			</if>
		</where>
	</select>
	
	<select id="findCurrentMonthOrderAmount" resultType="java.math.BigDecimal">
		SELECT 
		sum(order_amount)
		from so_jd 
		WHERE 
		DATE_FORMAT(create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m') 
		and (order_confirm_status = 1 or order_confirm_status = 3)
		and store_id = #{storeId} 
		and platform_id = #{platformId}
	</select>
	
	<select id="findcurrentDayOrderAmount" resultType="java.math.BigDecimal">
		SELECT 
		sum(order_amount)
		from so_jd 
		WHERE 
		DATE_FORMAT(create_time,'%Y-%m-%d')=DATE_FORMAT(#{date},'%Y-%m-%d') 
		and (order_confirm_status = 1 or order_confirm_status = 3)
		and store_id = #{storeId} 
		and platform_id = #{platformId}
	</select>
	
	<select id="findSoByPuId" resultMap="soMap">
		select 
		so.* 
		from so_item si 
		LEFT JOIN so_jd ON si.so_id = so.id
		where 
		so.order_confirm_status = #{orderConfirmStatus}
		and si.pu_id = #{puId}
	</select>
	
	<select id="findSoByPuIds" resultMap="soMap">
		select 
		so.* 
		from so_item si 
		LEFT JOIN so_jd ON si.so_id = so.id
		where 
		so.order_confirm_status = #{orderConfirmStatus}
		and si.pu_id in 
		<foreach collection="puIds" item="puId" open="(" separator="," close=")">
			#{puId}
		</foreach>
	</select>



	<select id="findSoByThirdpartyId"  resultMap="soMap">
		SELECT
		c.*
		FROM so_thirdparty a LEFT JOIN so_child b  on a.so_child_id = b.id LEFT  JOIN so_jd c ON c.id=b.so_id
		WHERE a.thirdparty_id = #{jdOrderId}
	</select>
</mapper>
	