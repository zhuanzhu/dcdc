<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.egeo.components.finance.dao.read.AccountBatchReadDAO">

	<select id="queryRechargeAccountBatchPageTotalSize"
		resultType="java.lang.Integer">
		select count(0) from account_batch
		<where>
			type in (7,8)
			<if test="companyId!=null">
				and company_id=#{companyId}
			</if>
			<if test="batchNo!=null">
				and (
				ra_batch like concat('%',#{batchNo},'%')
				or
				fin_batch like concat('%',#{batchNo},'%')
				)
			</if>
		</where>
	</select>

	<select id="queryRechargeAccountBatchPage"
		resultMap="accountBatchMap">
		select * from account_batch
		<where>
			type in (7,8)
			<if test="companyId!=null">
				and company_id=#{companyId}
			</if>
			<if test="batchNo!=null">
				and (
				ra_batch like concat('%',#{batchNo},'%')
				or
				fin_batch like concat('%',#{batchNo},'%')
				)
			</if>
		</where>
		order by create_time desc
		limit #{page.limitStart},#{page.pageSize}
	</select>

	<select id="querySameSumBatchInWeek" resultMap="accountBatchMap">
		select * from
		account_batch
		where sum=#{sum}
		and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[<=date(create_time)]]>
	</select>

	<select id="queryAccountBatchPageTotalCount"
		resultType="java.lang.Integer">
		select count(0) <include refid="queryAccountBatchPage_MainCond" />
	</select>

	<select id="queryAccountBatchPage" resultMap="accountBatchMap">
		select *
		<include refid="queryAccountBatchPage_MainCond" />
		order by status,create_time desc
		limit #{page.limitStart},#{page.pageSize}
	</select>

	<sql id="queryAccountBatchPage_MainCond">
		from account_batch
		<where>
			<if test="batchNo!=null">
				(
				ra_batch like concat('%',#{batchNo},'%')
				or
				fin_batch like concat('%',#{batchNo},'%')
				)
			</if>
			<if test="accountId!=null">
				and (outflow_accountid=#{accountId}
				or
				inflow_accountid=#{accountId}
				)
			</if>
			<if test="keyWord!=null">
				and account_id in (select id from company_account where
				name like concat('%',#{keyWord},'%')
				)
			</if>
			<if test="companyId!=null">
				and company_id=#{companyId}
			</if>
			<if test="type!=null">
				and type=#{type}
			</if>
			<if test="status!=null">
				and status=#{status}
			</if>
			<if test="platformId!=null">
				and platform_id=#{platformId}
			</if>
		</where>
	</sql>

	<select id="queryBatchDayCount" resultType="java.lang.Integer">
		select count(0) from
		account_batch
		where date(create_time)=CURDATE()
	</select>

	<select id="queryAccountBatchByFinBatch"
		resultMap="accountBatchMap">
		select * from account_batch
		where fin_batch=#{finBatch}
	</select>

	<resultMap type="com.egeo.components.finance.po.AccountBatchPO"
		id="accountBatchMap">
		<result property="id" column="id" />
		<result property="inflowAccountid" column="inflow_accountid" />
		<result property="outflowAccountid" column="outflow_accountid" />
		<result property="raBatch" column="ra_batch" />
		<result property="finBatch" column="fin_batch" />
		<result property="sum" column="sum" />
		<result property="reasonId" column="reason_id" />
		<result property="remark" column="remark" />
		<result property="flowAmount" column="flow_amount" />
		<result property="status" column="status" />
		<result property="operatorId" column="operator_id" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="platformId" column="platform_id" />
		<result property="type" column="type" />
		<result property="companyId" column="company_id" />
		<result property="currencyType" column="currency_type" />
	</resultMap>

	<sql id="accountBatchColumns">
		id,
		inflow_accountid,
		outflow_accountid,
		ra_batch,
		fin_batch,
		sum,
		reason_id,
		remark,
		flow_amount,
		status,
		operator_id,
		create_time,
		update_time,
		type,
		company_id,
		currency_type
	</sql>

	<select id="findById"
		parameterType="com.egeo.components.finance.po.AccountBatchPO"
		resultMap="accountBatchMap">
		SELECT
		<include refid="accountBatchColumns" />
		FROM account_batch
		WHERE id = #{po.id}
	</select>

	<select id="findOfPage" resultMap="accountBatchMap">
		SELECT
		<include refid="accountBatchColumns" />
		FROM account_batch
		<where>
			<if test="po.accountId != null">
				and account_id = #{po.accountId}
			</if>
			<if test="po.raBatch != null">
				and ra_batch = #{po.raBatch}
			</if>
			<if test="po.finBatch != null">
				and fin_batch = #{po.finBatch}
			</if>
			<if test="po.sum != null">
				and sum = #{po.sum}
			</if>
			<if test="po.reasonId != null">
				and reason_id = #{po.reasonId}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.flowAmount != null">
				and flow_amount = #{po.flowAmount}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.operatorId != null">
				and operator_id = #{po.operatorId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when
				test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
		<if test="page != null">
			limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>

	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM account_batch
		<where>
			<if test="po.accountId != null">
				and account_id = #{po.accountId}
			</if>
			<if test="po.raBatch != null">
				and ra_batch = #{po.raBatch}
			</if>
			<if test="po.finBatch != null">
				and fin_batch = #{po.finBatch}
			</if>
			<if test="po.sum != null">
				and sum = #{po.sum}
			</if>
			<if test="po.reasonId != null">
				and reason_id = #{po.reasonId}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.flowAmount != null">
				and flow_amount = #{po.flowAmount}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.operatorId != null">
				and operator_id = #{po.operatorId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
	</select>

	<select id="findAll" resultMap="accountBatchMap">
		SELECT
		<include refid="accountBatchColumns" />
		FROM account_batch
		<where>
			<if test="po.accountId != null">
				and account_id = #{po.accountId}
			</if>
			<if test="po.raBatch != null">
				and ra_batch = #{po.raBatch}
			</if>
			<if test="po.finBatch != null">
				and fin_batch = #{po.finBatch}
			</if>
			<if test="po.sum != null">
				and sum = #{po.sum}
			</if>
			<if test="po.reasonId != null">
				and reason_id = #{po.reasonId}
			</if>
			<if test="po.remark != null">
				and remark = #{po.remark}
			</if>
			<if test="po.flowAmount != null">
				and flow_amount = #{po.flowAmount}
			</if>
			<if test="po.status != null">
				and status = #{po.status}
			</if>
			<if test="po.operatorId != null">
				and operator_id = #{po.operatorId}
			</if>
			<if test="po.createTime != null">
				and create_time = #{po.createTime}
			</if>
			<if test="po.updateTime != null">
				and update_time = #{po.updateTime}
			</if>
		</where>
		<choose>
			<when
				test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id desc
			</otherwise>
		</choose>
	</select>
</mapper>
	